{"ast":null,"code":"/*! @azure/msal-common v14.0.3 2023-09-05 */\n'use strict';\n\nimport { Constants } from '../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Log message level.\n */\nvar LogLevel;\n(function (LogLevel) {\n  LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\n  LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\n  LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n  LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\n  LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\n})(LogLevel || (LogLevel = {}));\n/**\n * Class which facilitates logging of messages to a specific place.\n */\nclass Logger {\n  constructor(loggerOptions, packageName, packageVersion) {\n    // Current log level, defaults to info.\n    this.level = LogLevel.Info;\n    const defaultLoggerCallback = () => {\n      return;\n    };\n    const setLoggerOptions = loggerOptions || Logger.createDefaultLoggerOptions();\n    this.localCallback = setLoggerOptions.loggerCallback || defaultLoggerCallback;\n    this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\n    this.level = typeof setLoggerOptions.logLevel === \"number\" ? setLoggerOptions.logLevel : LogLevel.Info;\n    this.correlationId = setLoggerOptions.correlationId || Constants.EMPTY_STRING;\n    this.packageName = packageName || Constants.EMPTY_STRING;\n    this.packageVersion = packageVersion || Constants.EMPTY_STRING;\n  }\n  static createDefaultLoggerOptions() {\n    return {\n      loggerCallback: () => {\n        // allow users to not set loggerCallback\n      },\n      piiLoggingEnabled: false,\n      logLevel: LogLevel.Info\n    };\n  }\n  /**\n   * Create new Logger with existing configurations.\n   */\n  clone(packageName, packageVersion, correlationId) {\n    return new Logger({\n      loggerCallback: this.localCallback,\n      piiLoggingEnabled: this.piiLoggingEnabled,\n      logLevel: this.level,\n      correlationId: correlationId || this.correlationId\n    }, packageName, packageVersion);\n  }\n  /**\n   * Log message with required options.\n   */\n  logMessage(logMessage, options) {\n    if (options.logLevel > this.level || !this.piiLoggingEnabled && options.containsPii) {\n      return;\n    }\n    const timestamp = new Date().toUTCString();\n    // Add correlationId to logs if set, correlationId provided on log messages take precedence\n    const logHeader = `[${timestamp}] : [${options.correlationId || this.correlationId || \"\"}]`;\n    const log = `${logHeader} : ${this.packageName}@${this.packageVersion} : ${LogLevel[options.logLevel]} - ${logMessage}`;\n    // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\n    this.executeCallback(options.logLevel, log, options.containsPii || false);\n  }\n  /**\n   * Execute callback with message.\n   */\n  executeCallback(level, message, containsPii) {\n    if (this.localCallback) {\n      this.localCallback(level, message, containsPii);\n    }\n  }\n  /**\n   * Logs error messages.\n   */\n  error(message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Error,\n      containsPii: false,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  }\n  /**\n   * Logs error messages with PII.\n   */\n  errorPii(message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Error,\n      containsPii: true,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  }\n  /**\n   * Logs warning messages.\n   */\n  warning(message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Warning,\n      containsPii: false,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  }\n  /**\n   * Logs warning messages with PII.\n   */\n  warningPii(message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Warning,\n      containsPii: true,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  }\n  /**\n   * Logs info messages.\n   */\n  info(message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Info,\n      containsPii: false,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  }\n  /**\n   * Logs info messages with PII.\n   */\n  infoPii(message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Info,\n      containsPii: true,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  }\n  /**\n   * Logs verbose messages.\n   */\n  verbose(message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Verbose,\n      containsPii: false,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  }\n  /**\n   * Logs verbose messages with PII.\n   */\n  verbosePii(message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Verbose,\n      containsPii: true,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  }\n  /**\n   * Logs trace messages.\n   */\n  trace(message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Trace,\n      containsPii: false,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  }\n  /**\n   * Logs trace messages with PII.\n   */\n  tracePii(message, correlationId) {\n    this.logMessage(message, {\n      logLevel: LogLevel.Trace,\n      containsPii: true,\n      correlationId: correlationId || Constants.EMPTY_STRING\n    });\n  }\n  /**\n   * Returns whether PII Logging is enabled or not.\n   */\n  isPiiLoggingEnabled() {\n    return this.piiLoggingEnabled || false;\n  }\n}\nexport { LogLevel, Logger };","map":{"version":3,"names":["Constants","LogLevel","Logger","constructor","loggerOptions","packageName","packageVersion","level","Info","defaultLoggerCallback","setLoggerOptions","createDefaultLoggerOptions","localCallback","loggerCallback","piiLoggingEnabled","logLevel","correlationId","EMPTY_STRING","clone","logMessage","options","containsPii","timestamp","Date","toUTCString","logHeader","log","executeCallback","message","error","Error","errorPii","warning","Warning","warningPii","info","infoPii","verbose","Verbose","verbosePii","trace","Trace","tracePii","isPiiLoggingEnabled"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-common/dist/logger/Logger.mjs"],"sourcesContent":["/*! @azure/msal-common v14.0.3 2023-09-05 */\n'use strict';\nimport { Constants } from '../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Log message level.\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\n    LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\n})(LogLevel || (LogLevel = {}));\n/**\n * Class which facilitates logging of messages to a specific place.\n */\nclass Logger {\n    constructor(loggerOptions, packageName, packageVersion) {\n        // Current log level, defaults to info.\n        this.level = LogLevel.Info;\n        const defaultLoggerCallback = () => {\n            return;\n        };\n        const setLoggerOptions = loggerOptions || Logger.createDefaultLoggerOptions();\n        this.localCallback =\n            setLoggerOptions.loggerCallback || defaultLoggerCallback;\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\n        this.level =\n            typeof setLoggerOptions.logLevel === \"number\"\n                ? setLoggerOptions.logLevel\n                : LogLevel.Info;\n        this.correlationId =\n            setLoggerOptions.correlationId || Constants.EMPTY_STRING;\n        this.packageName = packageName || Constants.EMPTY_STRING;\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\n    }\n    static createDefaultLoggerOptions() {\n        return {\n            loggerCallback: () => {\n                // allow users to not set loggerCallback\n            },\n            piiLoggingEnabled: false,\n            logLevel: LogLevel.Info,\n        };\n    }\n    /**\n     * Create new Logger with existing configurations.\n     */\n    clone(packageName, packageVersion, correlationId) {\n        return new Logger({\n            loggerCallback: this.localCallback,\n            piiLoggingEnabled: this.piiLoggingEnabled,\n            logLevel: this.level,\n            correlationId: correlationId || this.correlationId,\n        }, packageName, packageVersion);\n    }\n    /**\n     * Log message with required options.\n     */\n    logMessage(logMessage, options) {\n        if (options.logLevel > this.level ||\n            (!this.piiLoggingEnabled && options.containsPii)) {\n            return;\n        }\n        const timestamp = new Date().toUTCString();\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\n        const logHeader = `[${timestamp}] : [${options.correlationId || this.correlationId || \"\"}]`;\n        const log = `${logHeader} : ${this.packageName}@${this.packageVersion} : ${LogLevel[options.logLevel]} - ${logMessage}`;\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\n    }\n    /**\n     * Execute callback with message.\n     */\n    executeCallback(level, message, containsPii) {\n        if (this.localCallback) {\n            this.localCallback(level, message, containsPii);\n        }\n    }\n    /**\n     * Logs error messages.\n     */\n    error(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs error messages with PII.\n     */\n    errorPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs warning messages.\n     */\n    warning(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs warning messages with PII.\n     */\n    warningPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs info messages.\n     */\n    info(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs info messages with PII.\n     */\n    infoPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs verbose messages.\n     */\n    verbose(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs verbose messages with PII.\n     */\n    verbosePii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs trace messages.\n     */\n    trace(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs trace messages with PII.\n     */\n    tracePii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Returns whether PII Logging is enabled or not.\n     */\n    isPiiLoggingEnabled() {\n        return this.piiLoggingEnabled || false;\n    }\n}\n\nexport { LogLevel, Logger };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}