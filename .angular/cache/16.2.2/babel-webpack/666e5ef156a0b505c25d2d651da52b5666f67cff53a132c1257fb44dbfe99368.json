{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\nimport _asyncToGenerator from \"C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { AsyncMemoryStorage } from './AsyncMemoryStorage.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst CryptoKeyStoreNames = {\n  asymmetricKeys: \"asymmetricKeys\",\n  symmetricKeys: \"symmetricKeys\"\n};\n/**\n * MSAL CryptoKeyStore DB Version 2\n */\nclass CryptoKeyStore {\n  constructor(logger) {\n    this.logger = logger;\n    this.asymmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.asymmetricKeys);\n    this.symmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.symmetricKeys);\n  }\n  clear() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Delete in-memory keystores\n      _this.asymmetricKeys.clearInMemory();\n      _this.symmetricKeys.clearInMemory();\n      /**\n       * There is only one database, so calling clearPersistent on asymmetric keystore takes care of\n       * every persistent keystore\n       */\n      try {\n        yield _this.asymmetricKeys.clearPersistent();\n        return true;\n      } catch (e) {\n        if (e instanceof Error) {\n          _this.logger.error(`Clearing keystore failed with error: ${e.message}`);\n        } else {\n          _this.logger.error(\"Clearing keystore failed with unknown error\");\n        }\n        return false;\n      }\n    })();\n  }\n}\nexport { CryptoKeyStore, CryptoKeyStoreNames };","map":{"version":3,"names":["_asyncToGenerator","AsyncMemoryStorage","CryptoKeyStoreNames","asymmetricKeys","symmetricKeys","CryptoKeyStore","constructor","logger","clear","_this","clearInMemory","clearPersistent","e","Error","error","message"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-browser/dist/cache/CryptoKeyStore.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\nimport { AsyncMemoryStorage } from './AsyncMemoryStorage.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst CryptoKeyStoreNames = {\n    asymmetricKeys: \"asymmetricKeys\",\n    symmetricKeys: \"symmetricKeys\",\n};\n/**\n * MSAL CryptoKeyStore DB Version 2\n */\nclass CryptoKeyStore {\n    constructor(logger) {\n        this.logger = logger;\n        this.asymmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.asymmetricKeys);\n        this.symmetricKeys = new AsyncMemoryStorage(this.logger, CryptoKeyStoreNames.symmetricKeys);\n    }\n    async clear() {\n        // Delete in-memory keystores\n        this.asymmetricKeys.clearInMemory();\n        this.symmetricKeys.clearInMemory();\n        /**\n         * There is only one database, so calling clearPersistent on asymmetric keystore takes care of\n         * every persistent keystore\n         */\n        try {\n            await this.asymmetricKeys.clearPersistent();\n            return true;\n        }\n        catch (e) {\n            if (e instanceof Error) {\n                this.logger.error(`Clearing keystore failed with error: ${e.message}`);\n            }\n            else {\n                this.logger.error(\"Clearing keystore failed with unknown error\");\n            }\n            return false;\n        }\n    }\n}\n\nexport { CryptoKeyStore, CryptoKeyStoreNames };\n"],"mappings":"AAAA;AACA,YAAY;;AAAC,OAAAA,iBAAA;AACb,SAASC,kBAAkB,QAAQ,0BAA0B;;AAE7D;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAG;EACxBC,cAAc,EAAE,gBAAgB;EAChCC,aAAa,EAAE;AACnB,CAAC;AACD;AACA;AACA;AACA,MAAMC,cAAc,CAAC;EACjBC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACJ,cAAc,GAAG,IAAIF,kBAAkB,CAAC,IAAI,CAACM,MAAM,EAAEL,mBAAmB,CAACC,cAAc,CAAC;IAC7F,IAAI,CAACC,aAAa,GAAG,IAAIH,kBAAkB,CAAC,IAAI,CAACM,MAAM,EAAEL,mBAAmB,CAACE,aAAa,CAAC;EAC/F;EACMI,KAAKA,CAAA,EAAG;IAAA,IAAAC,KAAA;IAAA,OAAAT,iBAAA;MACV;MACAS,KAAI,CAACN,cAAc,CAACO,aAAa,CAAC,CAAC;MACnCD,KAAI,CAACL,aAAa,CAACM,aAAa,CAAC,CAAC;MAClC;AACR;AACA;AACA;MACQ,IAAI;QACA,MAAMD,KAAI,CAACN,cAAc,CAACQ,eAAe,CAAC,CAAC;QAC3C,OAAO,IAAI;MACf,CAAC,CACD,OAAOC,CAAC,EAAE;QACN,IAAIA,CAAC,YAAYC,KAAK,EAAE;UACpBJ,KAAI,CAACF,MAAM,CAACO,KAAK,CAAE,wCAAuCF,CAAC,CAACG,OAAQ,EAAC,CAAC;QAC1E,CAAC,MACI;UACDN,KAAI,CAACF,MAAM,CAACO,KAAK,CAAC,6CAA6C,CAAC;QACpE;QACA,OAAO,KAAK;MAChB;IAAC;EACL;AACJ;AAEA,SAAST,cAAc,EAAEH,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}