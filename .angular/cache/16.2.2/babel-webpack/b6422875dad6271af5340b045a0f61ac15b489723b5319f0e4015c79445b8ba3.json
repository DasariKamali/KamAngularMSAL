{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\nimport _asyncToGenerator from \"C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TeamsAppOperatingContext } from '../operatingcontext/TeamsAppOperatingContext.mjs';\nimport { StandardOperatingContext } from '../operatingcontext/StandardOperatingContext.mjs';\nimport { Logger } from '@azure/msal-common';\nimport { name, version } from '../packageMetadata.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass ControllerFactory {\n  constructor(config) {\n    this.config = config;\n    const loggerOptions = {\n      loggerCallback: undefined,\n      piiLoggingEnabled: false,\n      logLevel: undefined,\n      correlationId: undefined\n    };\n    this.logger = new Logger(loggerOptions, name, version);\n  }\n  createController() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const standard = new StandardOperatingContext(_this.config);\n      const metaOS = new TeamsAppOperatingContext(_this.config);\n      const operatingContexts = [standard.initialize(), metaOS.initialize()];\n      return Promise.all(operatingContexts).then( /*#__PURE__*/_asyncToGenerator(function* () {\n        if (metaOS.isAvailable()) {\n          /*\n           * pull down metaos module\n           * create associated controller\n           */\n          // return await StandardController.createController(standard);\n          const controller = yield import('./StandardController.mjs');\n          return yield controller.StandardController.createController(standard);\n        } else if (standard.isAvailable()) {\n          const controller = yield import('./StandardController.mjs');\n          return yield controller.StandardController.createController(standard);\n        }\n        throw new Error(\"No controller found.\");\n      }));\n    })();\n  }\n}\nexport { ControllerFactory };","map":{"version":3,"names":["_asyncToGenerator","TeamsAppOperatingContext","StandardOperatingContext","Logger","name","version","ControllerFactory","constructor","config","loggerOptions","loggerCallback","undefined","piiLoggingEnabled","logLevel","correlationId","logger","createController","_this","standard","metaOS","operatingContexts","initialize","Promise","all","then","isAvailable","controller","StandardController","Error"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\nimport { TeamsAppOperatingContext } from '../operatingcontext/TeamsAppOperatingContext.mjs';\nimport { StandardOperatingContext } from '../operatingcontext/StandardOperatingContext.mjs';\nimport { Logger } from '@azure/msal-common';\nimport { name, version } from '../packageMetadata.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass ControllerFactory {\n    constructor(config) {\n        this.config = config;\n        const loggerOptions = {\n            loggerCallback: undefined,\n            piiLoggingEnabled: false,\n            logLevel: undefined,\n            correlationId: undefined,\n        };\n        this.logger = new Logger(loggerOptions, name, version);\n    }\n    async createController() {\n        const standard = new StandardOperatingContext(this.config);\n        const metaOS = new TeamsAppOperatingContext(this.config);\n        const operatingContexts = [standard.initialize(), metaOS.initialize()];\n        return Promise.all(operatingContexts).then(async () => {\n            if (metaOS.isAvailable()) {\n                /*\n                 * pull down metaos module\n                 * create associated controller\n                 */\n                // return await StandardController.createController(standard);\n                const controller = await import('./StandardController.mjs');\n                return await controller.StandardController.createController(standard);\n            }\n            else if (standard.isAvailable()) {\n                const controller = await import('./StandardController.mjs');\n                return await controller.StandardController.createController(standard);\n            }\n            throw new Error(\"No controller found.\");\n        });\n    }\n}\n\nexport { ControllerFactory };\n"],"mappings":"AAAA;AACA,YAAY;;AAAC,OAAAA,iBAAA;AACb,SAASC,wBAAwB,QAAQ,kDAAkD;AAC3F,SAASC,wBAAwB,QAAQ,kDAAkD;AAC3F,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,IAAI,EAAEC,OAAO,QAAQ,wBAAwB;;AAEtD;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,CAAC;EACpBC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,MAAMC,aAAa,GAAG;MAClBC,cAAc,EAAEC,SAAS;MACzBC,iBAAiB,EAAE,KAAK;MACxBC,QAAQ,EAAEF,SAAS;MACnBG,aAAa,EAAEH;IACnB,CAAC;IACD,IAAI,CAACI,MAAM,GAAG,IAAIZ,MAAM,CAACM,aAAa,EAAEL,IAAI,EAAEC,OAAO,CAAC;EAC1D;EACMW,gBAAgBA,CAAA,EAAG;IAAA,IAAAC,KAAA;IAAA,OAAAjB,iBAAA;MACrB,MAAMkB,QAAQ,GAAG,IAAIhB,wBAAwB,CAACe,KAAI,CAACT,MAAM,CAAC;MAC1D,MAAMW,MAAM,GAAG,IAAIlB,wBAAwB,CAACgB,KAAI,CAACT,MAAM,CAAC;MACxD,MAAMY,iBAAiB,GAAG,CAACF,QAAQ,CAACG,UAAU,CAAC,CAAC,EAAEF,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC;MACtE,OAAOC,OAAO,CAACC,GAAG,CAACH,iBAAiB,CAAC,CAACI,IAAI,eAAAxB,iBAAA,CAAC,aAAY;QACnD,IAAImB,MAAM,CAACM,WAAW,CAAC,CAAC,EAAE;UACtB;AAChB;AACA;AACA;UACgB;UACA,MAAMC,UAAU,SAAS,MAAM,CAAC,0BAA0B,CAAC;UAC3D,aAAaA,UAAU,CAACC,kBAAkB,CAACX,gBAAgB,CAACE,QAAQ,CAAC;QACzE,CAAC,MACI,IAAIA,QAAQ,CAACO,WAAW,CAAC,CAAC,EAAE;UAC7B,MAAMC,UAAU,SAAS,MAAM,CAAC,0BAA0B,CAAC;UAC3D,aAAaA,UAAU,CAACC,kBAAkB,CAACX,gBAAgB,CAACE,QAAQ,CAAC;QACzE;QACA,MAAM,IAAIU,KAAK,CAAC,sBAAsB,CAAC;MAC3C,CAAC,EAAC;IAAC;EACP;AACJ;AAEA,SAAStB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}