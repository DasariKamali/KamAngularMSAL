{"ast":null,"code":"var _class;\n// src/app/app.module.ts\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { MsalModule, MsalInterceptor, MsalService } from '@azure/msal-angular'; // Import MsalService\nimport { msalConfig } from './auth-config';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SsoComponent } from './sso/sso.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@azure/msal-angular\";\nexport class AppModule {}\n_class = AppModule;\n_class.ɵfac = function AppModule_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _class,\n  bootstrap: [AppComponent]\n});\n_class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [MsalService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: MsalInterceptor,\n    multi: true\n  }],\n  imports: [BrowserModule, AppRoutingModule, RouterModule, MsalModule.forRoot({\n    auth: {\n      clientId: msalConfig.auth.clientId,\n      authority: msalConfig.auth.authority,\n      redirectUri: msalConfig.auth.redirectUri\n    },\n    cache: {\n      cacheLocation: msalConfig.cache.cacheLocation,\n      storeAuthStateInCookie: msalConfig.cache.storeAuthStateInCookie\n    }\n  })]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, SsoComponent],\n    imports: [BrowserModule, AppRoutingModule, RouterModule, i1.MsalModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","RouterModule","MsalModule","MsalInterceptor","MsalService","msalConfig","AppRoutingModule","AppComponent","SsoComponent","HTTP_INTERCEPTORS","AppModule","bootstrap","provide","useClass","multi","imports","forRoot","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","declarations","i1"],"sources":["C:\\Users\\v-dkamali\\Documents\\AngularMSALAD\\microsoft-login\\src\\app\\app.module.ts"],"sourcesContent":["// src/app/app.module.ts\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MsalModule, MsalInterceptor, MsalService } from '@azure/msal-angular'; // Import MsalService\nimport { msalConfig } from './auth-config';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SsoComponent } from './sso/sso.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent, SsoComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule,\n    MsalModule.forRoot({\n      auth: {\n        clientId: msalConfig.auth.clientId,\n        authority: msalConfig.auth.authority,\n        redirectUri: msalConfig.auth.redirectUri,\n      },\n      cache: {\n        cacheLocation: msalConfig.cache.cacheLocation,\n        storeAuthStateInCookie: msalConfig.cache.storeAuthStateInCookie,\n      },\n    }),\n  ],\n  providers: [\n    MsalService, // Add MsalService to providers\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: MsalInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n"],"mappings":";AAAA;AAEA,SAASA,aAAa,QAAQ,2BAA2B;AAEzD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,UAAU,EAAEC,eAAe,EAAEC,WAAW,QAAQ,qBAAqB,CAAC,CAAC;AAChF,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,iBAAiB,QAAQ,sBAAsB;;;AA8BxD,OAAM,MAAOC,SAAS;SAATA,SAAS;;mBAATA,MAAS;AAAA;;QAATA,MAAS;EAAAC,SAAA,GAFRJ,YAAY;AAAA;;aARb,CACTH,WAAW,EACX;IACEQ,OAAO,EAAEH,iBAAiB;IAC1BI,QAAQ,EAAEV,eAAe;IACzBW,KAAK,EAAE;GACR,CACF;EAAAC,OAAA,GAtBCf,aAAa,EACbM,gBAAgB,EAChBL,YAAY,EACZC,UAAU,CAACc,OAAO,CAAC;IACjBC,IAAI,EAAE;MACJC,QAAQ,EAAEb,UAAU,CAACY,IAAI,CAACC,QAAQ;MAClCC,SAAS,EAAEd,UAAU,CAACY,IAAI,CAACE,SAAS;MACpCC,WAAW,EAAEf,UAAU,CAACY,IAAI,CAACG;KAC9B;IACDC,KAAK,EAAE;MACLC,aAAa,EAAEjB,UAAU,CAACgB,KAAK,CAACC,aAAa;MAC7CC,sBAAsB,EAAElB,UAAU,CAACgB,KAAK,CAACE;;GAE5C,CAAC;AAAA;;2EAYOb,SAAS;IAAAc,YAAA,GA3BLjB,YAAY,EAAEC,YAAY;IAAAO,OAAA,GAEvCf,aAAa,EACbM,gBAAgB,EAChBL,YAAY,EAAAwB,EAAA,CAAAvB,UAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}