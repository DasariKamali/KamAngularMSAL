{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\nimport { AuthError } from '@azure/msal-common';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst BrowserConfigurationAuthErrorMessage = {\n  redirectUriNotSet: {\n    code: \"redirect_uri_empty\",\n    desc: \"A redirect URI is required for all calls, and none has been set.\"\n  },\n  postLogoutUriNotSet: {\n    code: \"post_logout_uri_empty\",\n    desc: \"A post logout redirect has not been set.\"\n  },\n  storageNotSupportedError: {\n    code: \"storage_not_supported\",\n    desc: \"Given storage configuration option was not supported.\"\n  },\n  noRedirectCallbacksSet: {\n    code: \"no_redirect_callbacks\",\n    desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  invalidCallbackObject: {\n    code: \"invalid_callback_object\",\n    desc: \"The object passed for the callback was invalid. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  stubPcaInstanceCalled: {\n    code: \"stubbed_public_client_application_called\",\n    desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\"\n  },\n  inMemRedirectUnavailable: {\n    code: \"in_mem_redirect_unavailable\",\n    desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\"\n  },\n  entropyNotProvided: {\n    code: \"entropy_not_provided\",\n    desc: \"The available browser crypto interface requires entropy set via system.cryptoOptions.entropy configuration option.\"\n  }\n};\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nclass BrowserConfigurationAuthError extends AuthError {\n  constructor(errorCode, errorMessage) {\n    super(errorCode, errorMessage);\n    this.name = \"BrowserConfigurationAuthError\";\n    Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n  }\n  /**\n   * Creates an error thrown when the redirect uri is empty (not set by caller)\n   */\n  static createRedirectUriEmptyError() {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code, BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\n  }\n  /**\n   * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\n   */\n  static createPostLogoutRedirectUriEmptyError() {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code, BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\n  }\n  /**\n   * Creates error thrown when given storage location is not supported.\n   * @param givenStorageLocation\n   */\n  static createStorageNotSupportedError(givenStorageLocation) {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`);\n  }\n  /**\n   * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\n   */\n  static createRedirectCallbacksNotSetError() {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\n  }\n  /**\n   * Creates error thrown when the stub instance of PublicClientApplication is called.\n   */\n  static createStubPcaInstanceCalledError() {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code, BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc);\n  }\n  /*\n   * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\n   */\n  static createInMemoryRedirectUnavailableError() {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code, BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc);\n  }\n  /**\n   * Creates an error thrown when a crypto interface that requires entropy is initialized without entropy\n   */\n  static createEntropyNotProvided() {\n    return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.entropyNotProvided.code, BrowserConfigurationAuthErrorMessage.entropyNotProvided.desc);\n  }\n}\nexport { BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage };","map":{"version":3,"names":["AuthError","BrowserConfigurationAuthErrorMessage","redirectUriNotSet","code","desc","postLogoutUriNotSet","storageNotSupportedError","noRedirectCallbacksSet","invalidCallbackObject","stubPcaInstanceCalled","inMemRedirectUnavailable","entropyNotProvided","BrowserConfigurationAuthError","constructor","errorCode","errorMessage","name","Object","setPrototypeOf","prototype","createRedirectUriEmptyError","createPostLogoutRedirectUriEmptyError","createStorageNotSupportedError","givenStorageLocation","createRedirectCallbacksNotSetError","createStubPcaInstanceCalledError","createInMemoryRedirectUnavailableError","createEntropyNotProvided"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\nimport { AuthError } from '@azure/msal-common';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst BrowserConfigurationAuthErrorMessage = {\n    redirectUriNotSet: {\n        code: \"redirect_uri_empty\",\n        desc: \"A redirect URI is required for all calls, and none has been set.\",\n    },\n    postLogoutUriNotSet: {\n        code: \"post_logout_uri_empty\",\n        desc: \"A post logout redirect has not been set.\",\n    },\n    storageNotSupportedError: {\n        code: \"storage_not_supported\",\n        desc: \"Given storage configuration option was not supported.\",\n    },\n    noRedirectCallbacksSet: {\n        code: \"no_redirect_callbacks\",\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\",\n    },\n    invalidCallbackObject: {\n        code: \"invalid_callback_object\",\n        desc: \"The object passed for the callback was invalid. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\",\n    },\n    stubPcaInstanceCalled: {\n        code: \"stubbed_public_client_application_called\",\n        desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\n    },\n    inMemRedirectUnavailable: {\n        code: \"in_mem_redirect_unavailable\",\n        desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\",\n    },\n    entropyNotProvided: {\n        code: \"entropy_not_provided\",\n        desc: \"The available browser crypto interface requires entropy set via system.cryptoOptions.entropy configuration option.\",\n    },\n};\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nclass BrowserConfigurationAuthError extends AuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n    /**\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\n     */\n    static createRedirectUriEmptyError() {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code, BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\n    }\n    /**\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\n     */\n    static createPostLogoutRedirectUriEmptyError() {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code, BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\n    }\n    /**\n     * Creates error thrown when given storage location is not supported.\n     * @param givenStorageLocation\n     */\n    static createStorageNotSupportedError(givenStorageLocation) {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`);\n    }\n    /**\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\n     */\n    static createRedirectCallbacksNotSetError() {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\n    }\n    /**\n     * Creates error thrown when the stub instance of PublicClientApplication is called.\n     */\n    static createStubPcaInstanceCalledError() {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code, BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc);\n    }\n    /*\n     * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\n     */\n    static createInMemoryRedirectUnavailableError() {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code, BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc);\n    }\n    /**\n     * Creates an error thrown when a crypto interface that requires entropy is initialized without entropy\n     */\n    static createEntropyNotProvided() {\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.entropyNotProvided.code, BrowserConfigurationAuthErrorMessage.entropyNotProvided.desc);\n    }\n}\n\nexport { BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}