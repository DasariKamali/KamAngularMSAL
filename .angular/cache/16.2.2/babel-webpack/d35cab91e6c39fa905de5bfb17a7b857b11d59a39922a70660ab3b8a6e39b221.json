{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\nimport _asyncToGenerator from \"C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PerformanceEvents, Constants, UrlString } from '@azure/msal-common';\nimport { InteractionHandler } from './InteractionHandler.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { DEFAULT_IFRAME_TIMEOUT_MS } from '../config/Configuration.mjs';\nimport { emptyNavigateUri, monitorWindowTimeout, hashDoesNotContainKnownProperties, hashEmptyError } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentHandler extends InteractionHandler {\n  constructor(authCodeModule, storageImpl, authCodeRequest, logger, systemOptions, performanceClient) {\n    super(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient);\n    this.navigateFrameWait = systemOptions.navigateFrameWait;\n    this.pollIntervalMilliseconds = systemOptions.pollIntervalMilliseconds;\n  }\n  /**\n   * Creates a hidden iframe to given URL using user-requested scopes as an id.\n   * @param urlNavigate\n   * @param userRequestScopes\n   */\n  initiateAuthRequest(requestUrl) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerInitiateAuthRequest, _this.authCodeRequest.correlationId);\n      if (!requestUrl) {\n        // Throw error if request URL is empty.\n        _this.logger.info(\"Navigate url is empty\");\n        throw createBrowserAuthError(emptyNavigateUri);\n      }\n      if (_this.navigateFrameWait) {\n        _this.performanceClient.setPreQueueTime(PerformanceEvents.SilentHandlerLoadFrame, _this.authCodeRequest.correlationId);\n        return yield _this.loadFrame(requestUrl);\n      }\n      return _this.loadFrameSync(requestUrl);\n    })();\n  }\n  /**\n   * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\n   * @param iframe\n   * @param timeout\n   */\n  monitorIframeForHash(iframe, timeout) {\n    this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerMonitorIframeForHash, this.authCodeRequest.correlationId);\n    return new Promise((resolve, reject) => {\n      if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\n        this.logger.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`);\n      }\n      /*\n       * Polling for iframes can be purely timing based,\n       * since we don't need to account for interaction.\n       */\n      const nowMark = window.performance.now();\n      const timeoutMark = nowMark + timeout;\n      const intervalId = setInterval(() => {\n        if (window.performance.now() > timeoutMark) {\n          this.removeHiddenIframe(iframe);\n          clearInterval(intervalId);\n          reject(createBrowserAuthError(monitorWindowTimeout));\n          return;\n        }\n        let href = Constants.EMPTY_STRING;\n        const contentWindow = iframe.contentWindow;\n        try {\n          /*\n           * Will throw if cross origin,\n           * which should be caught and ignored\n           * since we need the interval to keep running while on STS UI.\n           */\n          href = contentWindow ? contentWindow.location.href : Constants.EMPTY_STRING;\n        } catch (e) {}\n        if (!href || href === \"about:blank\") {\n          return;\n        }\n        const contentHash = contentWindow ? contentWindow.location.hash : Constants.EMPTY_STRING;\n        if (contentHash) {\n          if (UrlString.hashContainsKnownProperties(contentHash)) {\n            // Success case\n            this.removeHiddenIframe(iframe);\n            clearInterval(intervalId);\n            resolve(contentHash);\n            return;\n          } else {\n            // Hash is present but incorrect\n            this.logger.error(\"SilentHandler:monitorIFrameForHash - a hash is present in the iframe but it does not contain known properties. It's likely that the hash has been replaced by code running on the redirectUri page.\");\n            this.logger.errorPii(`SilentHandler:monitorIFrameForHash - the url detected in the iframe is: ${href}`);\n            this.removeHiddenIframe(iframe);\n            clearInterval(intervalId);\n            reject(createBrowserAuthError(hashDoesNotContainKnownProperties));\n            return;\n          }\n        } else {\n          // No hash is present\n          this.logger.error(\"SilentHandler:monitorIFrameForHash - the request has returned to the redirectUri but a hash is not present in the iframe. It's likely that the hash has been removed or the page has been redirected by code running on the redirectUri page.\");\n          this.logger.errorPii(`SilentHandler:monitorIFrameForHash - the url detected in the iframe is: ${href}`);\n          this.removeHiddenIframe(iframe);\n          clearInterval(intervalId);\n          reject(createBrowserAuthError(hashEmptyError));\n          return;\n        }\n      }, this.pollIntervalMilliseconds);\n    });\n  }\n  /**\n   * @hidden\n   * Loads iframe with authorization endpoint URL\n   * @ignore\n   */\n  loadFrame(urlNavigate) {\n    this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerLoadFrame, this.authCodeRequest.correlationId);\n    /*\n     * This trick overcomes iframe navigation in IE\n     * IE does not load the page consistently in iframe\n     */\n    return new Promise((resolve, reject) => {\n      const frameHandle = this.createHiddenIframe();\n      setTimeout(() => {\n        if (!frameHandle) {\n          reject(\"Unable to load iframe\");\n          return;\n        }\n        frameHandle.src = urlNavigate;\n        resolve(frameHandle);\n      }, this.navigateFrameWait);\n    });\n  }\n  /**\n   * @hidden\n   * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\n   * @param urlNavigate\n   * @param frameName\n   * @param logger\n   */\n  loadFrameSync(urlNavigate) {\n    const frameHandle = this.createHiddenIframe();\n    frameHandle.src = urlNavigate;\n    return frameHandle;\n  }\n  /**\n   * @hidden\n   * Creates a new hidden iframe or gets an existing one for silent token renewal.\n   * @ignore\n   */\n  createHiddenIframe() {\n    const authFrame = document.createElement(\"iframe\");\n    authFrame.style.visibility = \"hidden\";\n    authFrame.style.position = \"absolute\";\n    authFrame.style.width = authFrame.style.height = \"0\";\n    authFrame.style.border = \"0\";\n    authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\n    document.getElementsByTagName(\"body\")[0].appendChild(authFrame);\n    return authFrame;\n  }\n  /**\n   * @hidden\n   * Removes a hidden iframe from the page.\n   * @ignore\n   */\n  removeHiddenIframe(iframe) {\n    if (document.body === iframe.parentNode) {\n      document.body.removeChild(iframe);\n    }\n  }\n}\nexport { SilentHandler };","map":{"version":3,"names":["_asyncToGenerator","PerformanceEvents","Constants","UrlString","InteractionHandler","createBrowserAuthError","DEFAULT_IFRAME_TIMEOUT_MS","emptyNavigateUri","monitorWindowTimeout","hashDoesNotContainKnownProperties","hashEmptyError","SilentHandler","constructor","authCodeModule","storageImpl","authCodeRequest","logger","systemOptions","performanceClient","navigateFrameWait","pollIntervalMilliseconds","initiateAuthRequest","requestUrl","_this","addQueueMeasurement","SilentHandlerInitiateAuthRequest","correlationId","info","setPreQueueTime","SilentHandlerLoadFrame","loadFrame","loadFrameSync","monitorIframeForHash","iframe","timeout","SilentHandlerMonitorIframeForHash","Promise","resolve","reject","warning","nowMark","window","performance","now","timeoutMark","intervalId","setInterval","removeHiddenIframe","clearInterval","href","EMPTY_STRING","contentWindow","location","e","contentHash","hash","hashContainsKnownProperties","error","errorPii","urlNavigate","frameHandle","createHiddenIframe","setTimeout","src","authFrame","document","createElement","style","visibility","position","width","height","border","setAttribute","getElementsByTagName","appendChild","body","parentNode","removeChild"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\nimport { PerformanceEvents, Constants, UrlString } from '@azure/msal-common';\nimport { InteractionHandler } from './InteractionHandler.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { DEFAULT_IFRAME_TIMEOUT_MS } from '../config/Configuration.mjs';\nimport { emptyNavigateUri, monitorWindowTimeout, hashDoesNotContainKnownProperties, hashEmptyError } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentHandler extends InteractionHandler {\n    constructor(authCodeModule, storageImpl, authCodeRequest, logger, systemOptions, performanceClient) {\n        super(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient);\n        this.navigateFrameWait = systemOptions.navigateFrameWait;\n        this.pollIntervalMilliseconds = systemOptions.pollIntervalMilliseconds;\n    }\n    /**\n     * Creates a hidden iframe to given URL using user-requested scopes as an id.\n     * @param urlNavigate\n     * @param userRequestScopes\n     */\n    async initiateAuthRequest(requestUrl) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerInitiateAuthRequest, this.authCodeRequest.correlationId);\n        if (!requestUrl) {\n            // Throw error if request URL is empty.\n            this.logger.info(\"Navigate url is empty\");\n            throw createBrowserAuthError(emptyNavigateUri);\n        }\n        if (this.navigateFrameWait) {\n            this.performanceClient.setPreQueueTime(PerformanceEvents.SilentHandlerLoadFrame, this.authCodeRequest.correlationId);\n            return await this.loadFrame(requestUrl);\n        }\n        return this.loadFrameSync(requestUrl);\n    }\n    /**\n     * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\n     * @param iframe\n     * @param timeout\n     */\n    monitorIframeForHash(iframe, timeout) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerMonitorIframeForHash, this.authCodeRequest.correlationId);\n        return new Promise((resolve, reject) => {\n            if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\n                this.logger.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`);\n            }\n            /*\n             * Polling for iframes can be purely timing based,\n             * since we don't need to account for interaction.\n             */\n            const nowMark = window.performance.now();\n            const timeoutMark = nowMark + timeout;\n            const intervalId = setInterval(() => {\n                if (window.performance.now() > timeoutMark) {\n                    this.removeHiddenIframe(iframe);\n                    clearInterval(intervalId);\n                    reject(createBrowserAuthError(monitorWindowTimeout));\n                    return;\n                }\n                let href = Constants.EMPTY_STRING;\n                const contentWindow = iframe.contentWindow;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = contentWindow\n                        ? contentWindow.location.href\n                        : Constants.EMPTY_STRING;\n                }\n                catch (e) { }\n                if (!href || href === \"about:blank\") {\n                    return;\n                }\n                const contentHash = contentWindow\n                    ? contentWindow.location.hash\n                    : Constants.EMPTY_STRING;\n                if (contentHash) {\n                    if (UrlString.hashContainsKnownProperties(contentHash)) {\n                        // Success case\n                        this.removeHiddenIframe(iframe);\n                        clearInterval(intervalId);\n                        resolve(contentHash);\n                        return;\n                    }\n                    else {\n                        // Hash is present but incorrect\n                        this.logger.error(\"SilentHandler:monitorIFrameForHash - a hash is present in the iframe but it does not contain known properties. It's likely that the hash has been replaced by code running on the redirectUri page.\");\n                        this.logger.errorPii(`SilentHandler:monitorIFrameForHash - the url detected in the iframe is: ${href}`);\n                        this.removeHiddenIframe(iframe);\n                        clearInterval(intervalId);\n                        reject(createBrowserAuthError(hashDoesNotContainKnownProperties));\n                        return;\n                    }\n                }\n                else {\n                    // No hash is present\n                    this.logger.error(\"SilentHandler:monitorIFrameForHash - the request has returned to the redirectUri but a hash is not present in the iframe. It's likely that the hash has been removed or the page has been redirected by code running on the redirectUri page.\");\n                    this.logger.errorPii(`SilentHandler:monitorIFrameForHash - the url detected in the iframe is: ${href}`);\n                    this.removeHiddenIframe(iframe);\n                    clearInterval(intervalId);\n                    reject(createBrowserAuthError(hashEmptyError));\n                    return;\n                }\n            }, this.pollIntervalMilliseconds);\n        });\n    }\n    /**\n     * @hidden\n     * Loads iframe with authorization endpoint URL\n     * @ignore\n     */\n    loadFrame(urlNavigate) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerLoadFrame, this.authCodeRequest.correlationId);\n        /*\n         * This trick overcomes iframe navigation in IE\n         * IE does not load the page consistently in iframe\n         */\n        return new Promise((resolve, reject) => {\n            const frameHandle = this.createHiddenIframe();\n            setTimeout(() => {\n                if (!frameHandle) {\n                    reject(\"Unable to load iframe\");\n                    return;\n                }\n                frameHandle.src = urlNavigate;\n                resolve(frameHandle);\n            }, this.navigateFrameWait);\n        });\n    }\n    /**\n     * @hidden\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\n     * @param urlNavigate\n     * @param frameName\n     * @param logger\n     */\n    loadFrameSync(urlNavigate) {\n        const frameHandle = this.createHiddenIframe();\n        frameHandle.src = urlNavigate;\n        return frameHandle;\n    }\n    /**\n     * @hidden\n     * Creates a new hidden iframe or gets an existing one for silent token renewal.\n     * @ignore\n     */\n    createHiddenIframe() {\n        const authFrame = document.createElement(\"iframe\");\n        authFrame.style.visibility = \"hidden\";\n        authFrame.style.position = \"absolute\";\n        authFrame.style.width = authFrame.style.height = \"0\";\n        authFrame.style.border = \"0\";\n        authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\n        document.getElementsByTagName(\"body\")[0].appendChild(authFrame);\n        return authFrame;\n    }\n    /**\n     * @hidden\n     * Removes a hidden iframe from the page.\n     * @ignore\n     */\n    removeHiddenIframe(iframe) {\n        if (document.body === iframe.parentNode) {\n            document.body.removeChild(iframe);\n        }\n    }\n}\n\nexport { SilentHandler };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}