{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\nimport _asyncToGenerator from \"C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PerformanceEvents, Constants, AuthError } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { InteractionType } from '../utils/BrowserConstants.mjs';\nimport { SilentHandler } from '../interaction_handler/SilentHandler.mjs';\nimport { HybridSpaAuthorizationCodeClient } from './HybridSpaAuthorizationCodeClient.mjs';\nimport { authCodeRequired, silentLogoutUnsupported } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentAuthCodeClient extends StandardInteractionClient {\n  constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeMessageHandler, correlationId) {\n    super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n    this.apiId = apiId;\n  }\n  /**\n   * Acquires a token silently by redeeming an authorization code against the /token endpoint\n   * @param request\n   */\n  acquireToken(request) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.logger.trace(\"SilentAuthCodeClient.acquireToken called\");\n      // Auth code payload is required\n      if (!request.code) {\n        throw createBrowserAuthError(authCodeRequired);\n      }\n      // Create silent request\n      _this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\n      const silentRequest = yield _this.initializeAuthorizationRequest(request, InteractionType.Silent);\n      _this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || Constants.EMPTY_STRING, silentRequest.account || null);\n      const serverTelemetryManager = _this.initializeServerTelemetryManager(_this.apiId);\n      try {\n        // Create auth code request (PKCE not needed)\n        const authCodeRequest = {\n          ...silentRequest,\n          code: request.code\n        };\n        // Initialize the client\n        _this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientGetClientConfiguration, request.correlationId);\n        const clientConfig = yield _this.getClientConfiguration(serverTelemetryManager, silentRequest.authority);\n        const authClient = new HybridSpaAuthorizationCodeClient(clientConfig);\n        _this.logger.verbose(\"Auth code client created\");\n        // Create silent handler\n        const silentHandler = new SilentHandler(authClient, _this.browserStorage, authCodeRequest, _this.logger, _this.config.system, _this.performanceClient);\n        // Handle auth code parameters from request\n        return silentHandler.handleCodeResponseFromServer({\n          code: request.code,\n          msgraph_host: request.msGraphHost,\n          cloud_graph_host_name: request.cloudGraphHostName,\n          cloud_instance_host_name: request.cloudInstanceHostName\n        }, silentRequest.state, authClient.authority, _this.networkClient, false);\n      } catch (e) {\n        if (e instanceof AuthError) {\n          e.setCorrelationId(_this.correlationId);\n          serverTelemetryManager.cacheFailedRequest(e);\n        }\n        _this.browserStorage.cleanRequestByState(silentRequest.state);\n        throw e;\n      }\n    })();\n  }\n  /**\n   * Currently Unsupported\n   */\n  logout() {\n    // Synchronous so we must reject\n    return Promise.reject(createBrowserAuthError(silentLogoutUnsupported));\n  }\n}\nexport { SilentAuthCodeClient };","map":{"version":3,"names":["_asyncToGenerator","PerformanceEvents","Constants","AuthError","StandardInteractionClient","createBrowserAuthError","InteractionType","SilentHandler","HybridSpaAuthorizationCodeClient","authCodeRequired","silentLogoutUnsupported","SilentAuthCodeClient","constructor","config","storageImpl","browserCrypto","logger","eventHandler","navigationClient","apiId","performanceClient","nativeMessageHandler","correlationId","acquireToken","request","_this","trace","code","setPreQueueTime","StandardInteractionClientInitializeAuthorizationRequest","silentRequest","initializeAuthorizationRequest","Silent","browserStorage","updateCacheEntries","state","nonce","authority","loginHint","EMPTY_STRING","account","serverTelemetryManager","initializeServerTelemetryManager","authCodeRequest","StandardInteractionClientGetClientConfiguration","clientConfig","getClientConfiguration","authClient","verbose","silentHandler","system","handleCodeResponseFromServer","msgraph_host","msGraphHost","cloud_graph_host_name","cloudGraphHostName","cloud_instance_host_name","cloudInstanceHostName","networkClient","e","setCorrelationId","cacheFailedRequest","cleanRequestByState","logout","Promise","reject"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\nimport { PerformanceEvents, Constants, AuthError } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { InteractionType } from '../utils/BrowserConstants.mjs';\nimport { SilentHandler } from '../interaction_handler/SilentHandler.mjs';\nimport { HybridSpaAuthorizationCodeClient } from './HybridSpaAuthorizationCodeClient.mjs';\nimport { authCodeRequired, silentLogoutUnsupported } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentAuthCodeClient extends StandardInteractionClient {\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeMessageHandler, correlationId) {\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n        this.apiId = apiId;\n    }\n    /**\n     * Acquires a token silently by redeeming an authorization code against the /token endpoint\n     * @param request\n     */\n    async acquireToken(request) {\n        this.logger.trace(\"SilentAuthCodeClient.acquireToken called\");\n        // Auth code payload is required\n        if (!request.code) {\n            throw createBrowserAuthError(authCodeRequired);\n        }\n        // Create silent request\n        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\n        const silentRequest = await this.initializeAuthorizationRequest(request, InteractionType.Silent);\n        this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || Constants.EMPTY_STRING, silentRequest.account || null);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n        try {\n            // Create auth code request (PKCE not needed)\n            const authCodeRequest = {\n                ...silentRequest,\n                code: request.code,\n            };\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientGetClientConfiguration, request.correlationId);\n            const clientConfig = await this.getClientConfiguration(serverTelemetryManager, silentRequest.authority);\n            const authClient = new HybridSpaAuthorizationCodeClient(clientConfig);\n            this.logger.verbose(\"Auth code client created\");\n            // Create silent handler\n            const silentHandler = new SilentHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.config.system, this.performanceClient);\n            // Handle auth code parameters from request\n            return silentHandler.handleCodeResponseFromServer({\n                code: request.code,\n                msgraph_host: request.msGraphHost,\n                cloud_graph_host_name: request.cloudGraphHostName,\n                cloud_instance_host_name: request.cloudInstanceHostName,\n            }, silentRequest.state, authClient.authority, this.networkClient, false);\n        }\n        catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByState(silentRequest.state);\n            throw e;\n        }\n    }\n    /**\n     * Currently Unsupported\n     */\n    logout() {\n        // Synchronous so we must reject\n        return Promise.reject(createBrowserAuthError(silentLogoutUnsupported));\n    }\n}\n\nexport { SilentAuthCodeClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}