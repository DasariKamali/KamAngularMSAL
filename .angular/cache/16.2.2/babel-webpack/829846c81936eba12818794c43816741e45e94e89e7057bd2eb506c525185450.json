{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\nimport { AuthError, InteractionRequiredAuthError } from '@azure/msal-common';\nimport { createBrowserAuthError } from './BrowserAuthError.mjs';\nimport { noNetworkConnectivity, userCancelled } from './BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst INVALID_METHOD_ERROR = -2147186943;\nconst NativeStatusCode = {\n  USER_INTERACTION_REQUIRED: \"USER_INTERACTION_REQUIRED\",\n  USER_CANCEL: \"USER_CANCEL\",\n  NO_NETWORK: \"NO_NETWORK\",\n  TRANSIENT_ERROR: \"TRANSIENT_ERROR\",\n  PERSISTENT_ERROR: \"PERSISTENT_ERROR\",\n  DISABLED: \"DISABLED\",\n  ACCOUNT_UNAVAILABLE: \"ACCOUNT_UNAVAILABLE\"\n};\nconst NativeAuthErrorMessage = {\n  extensionError: {\n    code: \"ContentError\"\n  },\n  userSwitch: {\n    code: \"user_switch\",\n    desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\n  },\n  tokensNotFoundInCache: {\n    code: \"tokens_not_found_in_internal_memory_cache\",\n    desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\"\n  }\n};\nclass NativeAuthError extends AuthError {\n  constructor(errorCode, description, ext) {\n    super(errorCode, description);\n    Object.setPrototypeOf(this, NativeAuthError.prototype);\n    this.name = \"NativeAuthError\";\n    this.ext = ext;\n  }\n  /**\n   * These errors should result in a fallback to the 'standard' browser based auth flow.\n   */\n  isFatal() {\n    if (this.ext && this.ext.status && (this.ext.status === NativeStatusCode.PERSISTENT_ERROR || this.ext.status === NativeStatusCode.DISABLED)) {\n      return true;\n    }\n    if (this.ext && this.ext.error && this.ext.error === INVALID_METHOD_ERROR) {\n      return true;\n    }\n    switch (this.errorCode) {\n      case NativeAuthErrorMessage.extensionError.code:\n        return true;\n      default:\n        return false;\n    }\n  }\n  /**\n   * Create the appropriate error object based on the WAM status code.\n   * @param code\n   * @param description\n   * @param ext\n   * @returns\n   */\n  static createError(code, description, ext) {\n    if (ext && ext.status) {\n      switch (ext.status) {\n        case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n          return InteractionRequiredAuthError.createNativeAccountUnavailableError();\n        case NativeStatusCode.USER_INTERACTION_REQUIRED:\n          return new InteractionRequiredAuthError(code, description);\n        case NativeStatusCode.USER_CANCEL:\n          return createBrowserAuthError(userCancelled);\n        case NativeStatusCode.NO_NETWORK:\n          return createBrowserAuthError(noNetworkConnectivity);\n      }\n    }\n    return new NativeAuthError(code, description, ext);\n  }\n  /**\n   * Creates user switch error when the user chooses a different account in the native broker prompt\n   * @returns\n   */\n  static createUserSwitchError() {\n    return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\n  }\n  /**\n   * Creates a tokens not found error when the internal cache look up fails\n   * @returns NativeAuthError: tokensNotFoundInCache\n   */\n  static createTokensNotFoundInCacheError() {\n    return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\n  }\n}\nexport { NativeAuthError, NativeAuthErrorMessage, NativeStatusCode };","map":{"version":3,"names":["AuthError","InteractionRequiredAuthError","createBrowserAuthError","noNetworkConnectivity","userCancelled","INVALID_METHOD_ERROR","NativeStatusCode","USER_INTERACTION_REQUIRED","USER_CANCEL","NO_NETWORK","TRANSIENT_ERROR","PERSISTENT_ERROR","DISABLED","ACCOUNT_UNAVAILABLE","NativeAuthErrorMessage","extensionError","code","userSwitch","desc","tokensNotFoundInCache","NativeAuthError","constructor","errorCode","description","ext","Object","setPrototypeOf","prototype","name","isFatal","status","error","createError","createNativeAccountUnavailableError","createUserSwitchError","createTokensNotFoundInCacheError"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\nimport { AuthError, InteractionRequiredAuthError } from '@azure/msal-common';\nimport { createBrowserAuthError } from './BrowserAuthError.mjs';\nimport { noNetworkConnectivity, userCancelled } from './BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst INVALID_METHOD_ERROR = -2147186943;\nconst NativeStatusCode = {\n    USER_INTERACTION_REQUIRED: \"USER_INTERACTION_REQUIRED\",\n    USER_CANCEL: \"USER_CANCEL\",\n    NO_NETWORK: \"NO_NETWORK\",\n    TRANSIENT_ERROR: \"TRANSIENT_ERROR\",\n    PERSISTENT_ERROR: \"PERSISTENT_ERROR\",\n    DISABLED: \"DISABLED\",\n    ACCOUNT_UNAVAILABLE: \"ACCOUNT_UNAVAILABLE\",\n};\nconst NativeAuthErrorMessage = {\n    extensionError: {\n        code: \"ContentError\",\n    },\n    userSwitch: {\n        code: \"user_switch\",\n        desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\",\n    },\n    tokensNotFoundInCache: {\n        code: \"tokens_not_found_in_internal_memory_cache\",\n        desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\",\n    },\n};\nclass NativeAuthError extends AuthError {\n    constructor(errorCode, description, ext) {\n        super(errorCode, description);\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\n        this.name = \"NativeAuthError\";\n        this.ext = ext;\n    }\n    /**\n     * These errors should result in a fallback to the 'standard' browser based auth flow.\n     */\n    isFatal() {\n        if (this.ext &&\n            this.ext.status &&\n            (this.ext.status === NativeStatusCode.PERSISTENT_ERROR ||\n                this.ext.status === NativeStatusCode.DISABLED)) {\n            return true;\n        }\n        if (this.ext &&\n            this.ext.error &&\n            this.ext.error === INVALID_METHOD_ERROR) {\n            return true;\n        }\n        switch (this.errorCode) {\n            case NativeAuthErrorMessage.extensionError.code:\n                return true;\n            default:\n                return false;\n        }\n    }\n    /**\n     * Create the appropriate error object based on the WAM status code.\n     * @param code\n     * @param description\n     * @param ext\n     * @returns\n     */\n    static createError(code, description, ext) {\n        if (ext && ext.status) {\n            switch (ext.status) {\n                case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n                    return InteractionRequiredAuthError.createNativeAccountUnavailableError();\n                case NativeStatusCode.USER_INTERACTION_REQUIRED:\n                    return new InteractionRequiredAuthError(code, description);\n                case NativeStatusCode.USER_CANCEL:\n                    return createBrowserAuthError(userCancelled);\n                case NativeStatusCode.NO_NETWORK:\n                    return createBrowserAuthError(noNetworkConnectivity);\n            }\n        }\n        return new NativeAuthError(code, description, ext);\n    }\n    /**\n     * Creates user switch error when the user chooses a different account in the native broker prompt\n     * @returns\n     */\n    static createUserSwitchError() {\n        return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\n    }\n    /**\n     * Creates a tokens not found error when the internal cache look up fails\n     * @returns NativeAuthError: tokensNotFoundInCache\n     */\n    static createTokensNotFoundInCacheError() {\n        return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\n    }\n}\n\nexport { NativeAuthError, NativeAuthErrorMessage, NativeStatusCode };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}