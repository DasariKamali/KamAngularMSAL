{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { PublicClientApplication, AuthError } from '@azure/msal-browser';\nimport { msalConfig } from './auth-config';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    // Initialize MSAL when the service is constructed\n    this.app = new PublicClientApplication(msalConfig);\n    this.initializeMsal();\n  }\n  initializeMsal() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Call the MSAL initialize function and await it\n        yield _this.app.handleRedirectPromise();\n      } catch (error) {\n        console.error('MSAL initialization error:', error);\n      }\n    })();\n  }\n  login() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      // Ensure MSAL is initialized before attempting to login\n      yield _this2.initializeMsal();\n      try {\n        const loginResponse = yield _this2.app.loginPopup({\n          scopes: ['openid', 'profile', 'User.Read']\n        });\n        console.log('Login successful', loginResponse);\n      } catch (error) {\n        if (error instanceof AuthError) {\n          console.error('Authentication error:', error.errorMessage);\n        } else {\n          console.error('Unexpected error during login:', error);\n        }\n      }\n    })();\n  }\n  logout() {\n    this.app.logout();\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["PublicClientApplication","AuthError","msalConfig","AuthService","constructor","app","initializeMsal","_this","_asyncToGenerator","handleRedirectPromise","error","console","login","_this2","loginResponse","loginPopup","scopes","log","errorMessage","logout","factory","ɵfac","providedIn"],"sources":["C:\\Users\\v-dkamali\\Documents\\AngularMSALAD\\microsoft-login\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { PublicClientApplication, AuthError } from '@azure/msal-browser';\r\nimport { msalConfig } from './auth-config';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private app: PublicClientApplication;\r\n\r\n  constructor() {\r\n    // Initialize MSAL when the service is constructed\r\n    this.app = new PublicClientApplication(msalConfig);\r\n    this.initializeMsal();\r\n  }\r\n\r\n  private async initializeMsal(): Promise<void> {\r\n    try {\r\n      // Call the MSAL initialize function and await it\r\n      await this.app.handleRedirectPromise();\r\n    } catch (error) {\r\n      console.error('MSAL initialization error:', error);\r\n    }\r\n  }\r\n\r\n  async login(): Promise<void> {\r\n    // Ensure MSAL is initialized before attempting to login\r\n    await this.initializeMsal();\r\n\r\n    try {\r\n      const loginResponse = await this.app.loginPopup({\r\n        scopes: ['openid', 'profile', 'User.Read'],\r\n      });\r\n      console.log('Login successful', loginResponse);\r\n    } catch (error) {\r\n      if (error instanceof AuthError) {\r\n        console.error('Authentication error:', error.errorMessage);\r\n      } else {\r\n        console.error('Unexpected error during login:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  logout(): void {\r\n    this.app.logout();\r\n  }\r\n}\r\n"],"mappings":";;AACA,SAASA,uBAAuB,EAAEC,SAAS,QAAQ,qBAAqB;AACxE,SAASC,UAAU,QAAQ,eAAe;;AAK1C,OAAM,MAAOC,WAAW;EAGtBC,YAAA;IACE;IACA,IAAI,CAACC,GAAG,GAAG,IAAIL,uBAAuB,CAACE,UAAU,CAAC;IAClD,IAAI,CAACI,cAAc,EAAE;EACvB;EAEcA,cAAcA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC1B,IAAI;QACF;QACA,MAAMD,KAAI,CAACF,GAAG,CAACI,qBAAqB,EAAE;OACvC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;;IACnD;EACH;EAEME,KAAKA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAL,iBAAA;MACT;MACA,MAAMK,MAAI,CAACP,cAAc,EAAE;MAE3B,IAAI;QACF,MAAMQ,aAAa,SAASD,MAAI,CAACR,GAAG,CAACU,UAAU,CAAC;UAC9CC,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW;SAC1C,CAAC;QACFL,OAAO,CAACM,GAAG,CAAC,kBAAkB,EAAEH,aAAa,CAAC;OAC/C,CAAC,OAAOJ,KAAK,EAAE;QACd,IAAIA,KAAK,YAAYT,SAAS,EAAE;UAC9BU,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACQ,YAAY,CAAC;SAC3D,MAAM;UACLP,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;;;IAEzD;EACH;EAEAS,MAAMA,CAAA;IACJ,IAAI,CAACd,GAAG,CAACc,MAAM,EAAE;EACnB;;SAtCWhB,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAiB,OAAA,EAAXjB,MAAW,CAAAkB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}