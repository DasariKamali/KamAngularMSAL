{"ast":null,"code":"/*! @azure/msal-common v14.0.3 2023-09-05 */\n'use strict';\n\nimport _asyncToGenerator from \"C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TimeUtils } from '../utils/TimeUtils.mjs';\nimport { UrlString } from '../url/UrlString.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst KeyLocation = {\n  SW: \"sw\",\n  UHW: \"uhw\"\n};\n/** @internal */\nclass PopTokenGenerator {\n  constructor(cryptoUtils, performanceClient) {\n    this.cryptoUtils = cryptoUtils;\n    this.performanceClient = performanceClient;\n  }\n  /**\n   * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\n   * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\n   * @param request\n   * @returns\n   */\n  generateCnf(request) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.performanceClient?.addQueueMeasurement(PerformanceEvents.PopTokenGenerateCnf, request.correlationId);\n      _this.performanceClient?.setPreQueueTime(PerformanceEvents.PopTokenGenerateKid, request.correlationId);\n      const reqCnf = yield _this.generateKid(request);\n      const reqCnfString = _this.cryptoUtils.base64Encode(JSON.stringify(reqCnf));\n      return {\n        kid: reqCnf.kid,\n        reqCnfString,\n        reqCnfHash: yield _this.cryptoUtils.hashString(reqCnfString)\n      };\n    })();\n  }\n  /**\n   * Generates key_id for a SHR token request\n   * @param request\n   * @returns\n   */\n  generateKid(request) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.performanceClient?.addQueueMeasurement(PerformanceEvents.PopTokenGenerateKid, request.correlationId);\n      const kidThumbprint = yield _this2.cryptoUtils.getPublicKeyThumbprint(request);\n      return {\n        kid: kidThumbprint,\n        xms_ksl: KeyLocation.SW\n      };\n    })();\n  }\n  /**\n   * Signs the POP access_token with the local generated key-pair\n   * @param accessToken\n   * @param request\n   * @returns\n   */\n  signPopToken(accessToken, keyId, request) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return _this3.signPayload(accessToken, keyId, request);\n    })();\n  }\n  /**\n   * Utility function to generate the signed JWT for an access_token\n   * @param payload\n   * @param kid\n   * @param request\n   * @param claims\n   * @returns\n   */\n  signPayload(payload, keyId, request, claims) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      // Deconstruct request to extract SHR parameters\n      const {\n        resourceRequestMethod,\n        resourceRequestUri,\n        shrClaims,\n        shrNonce\n      } = request;\n      const resourceUrlString = resourceRequestUri ? new UrlString(resourceRequestUri) : undefined;\n      const resourceUrlComponents = resourceUrlString?.getUrlComponents();\n      return yield _this4.cryptoUtils.signJwt({\n        at: payload,\n        ts: TimeUtils.nowSeconds(),\n        m: resourceRequestMethod?.toUpperCase(),\n        u: resourceUrlComponents?.HostNameAndPort,\n        nonce: shrNonce || _this4.cryptoUtils.createNewGuid(),\n        p: resourceUrlComponents?.AbsolutePath,\n        q: resourceUrlComponents?.QueryString ? [[], resourceUrlComponents.QueryString] : undefined,\n        client_claims: shrClaims || undefined,\n        ...claims\n      }, keyId, request.correlationId);\n    })();\n  }\n}\nexport { PopTokenGenerator };","map":{"version":3,"names":["_asyncToGenerator","TimeUtils","UrlString","PerformanceEvents","KeyLocation","SW","UHW","PopTokenGenerator","constructor","cryptoUtils","performanceClient","generateCnf","request","_this","addQueueMeasurement","PopTokenGenerateCnf","correlationId","setPreQueueTime","PopTokenGenerateKid","reqCnf","generateKid","reqCnfString","base64Encode","JSON","stringify","kid","reqCnfHash","hashString","_this2","kidThumbprint","getPublicKeyThumbprint","xms_ksl","signPopToken","accessToken","keyId","_this3","signPayload","payload","claims","_this4","resourceRequestMethod","resourceRequestUri","shrClaims","shrNonce","resourceUrlString","undefined","resourceUrlComponents","getUrlComponents","signJwt","at","ts","nowSeconds","m","toUpperCase","u","HostNameAndPort","nonce","createNewGuid","p","AbsolutePath","q","QueryString","client_claims"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs"],"sourcesContent":["/*! @azure/msal-common v14.0.3 2023-09-05 */\n'use strict';\nimport { TimeUtils } from '../utils/TimeUtils.mjs';\nimport { UrlString } from '../url/UrlString.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst KeyLocation = {\n    SW: \"sw\",\n    UHW: \"uhw\",\n};\n/** @internal */\nclass PopTokenGenerator {\n    constructor(cryptoUtils, performanceClient) {\n        this.cryptoUtils = cryptoUtils;\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\n     * @param request\n     * @returns\n     */\n    async generateCnf(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.PopTokenGenerateCnf, request.correlationId);\n        this.performanceClient?.setPreQueueTime(PerformanceEvents.PopTokenGenerateKid, request.correlationId);\n        const reqCnf = await this.generateKid(request);\n        const reqCnfString = this.cryptoUtils.base64Encode(JSON.stringify(reqCnf));\n        return {\n            kid: reqCnf.kid,\n            reqCnfString,\n            reqCnfHash: await this.cryptoUtils.hashString(reqCnfString),\n        };\n    }\n    /**\n     * Generates key_id for a SHR token request\n     * @param request\n     * @returns\n     */\n    async generateKid(request) {\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.PopTokenGenerateKid, request.correlationId);\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(request);\n        return {\n            kid: kidThumbprint,\n            xms_ksl: KeyLocation.SW,\n        };\n    }\n    /**\n     * Signs the POP access_token with the local generated key-pair\n     * @param accessToken\n     * @param request\n     * @returns\n     */\n    async signPopToken(accessToken, keyId, request) {\n        return this.signPayload(accessToken, keyId, request);\n    }\n    /**\n     * Utility function to generate the signed JWT for an access_token\n     * @param payload\n     * @param kid\n     * @param request\n     * @param claims\n     * @returns\n     */\n    async signPayload(payload, keyId, request, claims) {\n        // Deconstruct request to extract SHR parameters\n        const { resourceRequestMethod, resourceRequestUri, shrClaims, shrNonce, } = request;\n        const resourceUrlString = resourceRequestUri\n            ? new UrlString(resourceRequestUri)\n            : undefined;\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\n        return await this.cryptoUtils.signJwt({\n            at: payload,\n            ts: TimeUtils.nowSeconds(),\n            m: resourceRequestMethod?.toUpperCase(),\n            u: resourceUrlComponents?.HostNameAndPort,\n            nonce: shrNonce || this.cryptoUtils.createNewGuid(),\n            p: resourceUrlComponents?.AbsolutePath,\n            q: resourceUrlComponents?.QueryString\n                ? [[], resourceUrlComponents.QueryString]\n                : undefined,\n            client_claims: shrClaims || undefined,\n            ...claims,\n        }, keyId, request.correlationId);\n    }\n}\n\nexport { PopTokenGenerator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}