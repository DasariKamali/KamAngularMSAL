{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\nimport _asyncToGenerator from \"C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { PerformanceEvents, RefreshTokenClient } from '@azure/msal-common';\nimport { ApiId } from '../utils/BrowserConstants.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { silentLogoutUnsupported } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentRefreshClient extends StandardInteractionClient {\n  /**\n   * Exchanges the refresh token for new tokens\n   * @param request\n   */\n  acquireToken(request) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentRefreshClientAcquireToken, request.correlationId);\n      _this.performanceClient.setPreQueueTime(PerformanceEvents.InitializeBaseRequest, request.correlationId);\n      const silentRequest = {\n        ...request,\n        ...(yield _this.initializeBaseRequest(request, request.account))\n      };\n      const acquireTokenMeasurement = _this.performanceClient.startMeasurement(PerformanceEvents.SilentRefreshClientAcquireToken, silentRequest.correlationId);\n      const serverTelemetryManager = _this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n      const refreshTokenClient = yield _this.createRefreshTokenClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n      _this.logger.verbose(\"Refresh token client created\");\n      // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n      _this.performanceClient.setPreQueueTime(PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request.correlationId);\n      return refreshTokenClient.acquireTokenByRefreshToken(silentRequest).then(result => result).then(result => {\n        acquireTokenMeasurement.end({\n          success: true,\n          fromCache: result.fromCache,\n          requestId: result.requestId\n        });\n        return result;\n      }).catch(e => {\n        e.setCorrelationId(_this.correlationId);\n        serverTelemetryManager.cacheFailedRequest(e);\n        acquireTokenMeasurement.end({\n          errorCode: e.errorCode,\n          subErrorCode: e.subError,\n          success: false\n        });\n        throw e;\n      });\n    })();\n  }\n  /**\n   * Currently Unsupported\n   */\n  logout() {\n    // Synchronous so we must reject\n    return Promise.reject(createBrowserAuthError(silentLogoutUnsupported));\n  }\n  /**\n   * Creates a Refresh Client with the given authority, or the default authority.\n   * @param serverTelemetryManager\n   * @param authorityUrl\n   */\n  createRefreshTokenClient(serverTelemetryManager, authorityUrl, azureCloudOptions) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      // Create auth module.\n      _this2.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientGetClientConfiguration, _this2.correlationId);\n      const clientConfig = yield _this2.getClientConfiguration(serverTelemetryManager, authorityUrl, azureCloudOptions);\n      return new RefreshTokenClient(clientConfig, _this2.performanceClient);\n    })();\n  }\n}\nexport { SilentRefreshClient };","map":{"version":3,"names":["_asyncToGenerator","StandardInteractionClient","PerformanceEvents","RefreshTokenClient","ApiId","createBrowserAuthError","silentLogoutUnsupported","SilentRefreshClient","acquireToken","request","_this","performanceClient","addQueueMeasurement","SilentRefreshClientAcquireToken","correlationId","setPreQueueTime","InitializeBaseRequest","silentRequest","initializeBaseRequest","account","acquireTokenMeasurement","startMeasurement","serverTelemetryManager","initializeServerTelemetryManager","acquireTokenSilent_silentFlow","refreshTokenClient","createRefreshTokenClient","authority","azureCloudOptions","logger","verbose","RefreshTokenClientAcquireTokenByRefreshToken","acquireTokenByRefreshToken","then","result","end","success","fromCache","requestId","catch","e","setCorrelationId","cacheFailedRequest","errorCode","subErrorCode","subError","logout","Promise","reject","authorityUrl","_this2","StandardInteractionClientGetClientConfiguration","clientConfig","getClientConfiguration"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { PerformanceEvents, RefreshTokenClient } from '@azure/msal-common';\nimport { ApiId } from '../utils/BrowserConstants.mjs';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { silentLogoutUnsupported } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentRefreshClient extends StandardInteractionClient {\n    /**\n     * Exchanges the refresh token for new tokens\n     * @param request\n     */\n    async acquireToken(request) {\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentRefreshClientAcquireToken, request.correlationId);\n        this.performanceClient.setPreQueueTime(PerformanceEvents.InitializeBaseRequest, request.correlationId);\n        const silentRequest = {\n            ...request,\n            ...(await this.initializeBaseRequest(request, request.account)),\n        };\n        const acquireTokenMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SilentRefreshClientAcquireToken, silentRequest.correlationId);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n        const refreshTokenClient = await this.createRefreshTokenClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n        this.logger.verbose(\"Refresh token client created\");\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n        this.performanceClient.setPreQueueTime(PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request.correlationId);\n        return refreshTokenClient\n            .acquireTokenByRefreshToken(silentRequest)\n            .then((result) => result)\n            .then((result) => {\n            acquireTokenMeasurement.end({\n                success: true,\n                fromCache: result.fromCache,\n                requestId: result.requestId,\n            });\n            return result;\n        })\n            .catch((e) => {\n            e.setCorrelationId(this.correlationId);\n            serverTelemetryManager.cacheFailedRequest(e);\n            acquireTokenMeasurement.end({\n                errorCode: e.errorCode,\n                subErrorCode: e.subError,\n                success: false,\n            });\n            throw e;\n        });\n    }\n    /**\n     * Currently Unsupported\n     */\n    logout() {\n        // Synchronous so we must reject\n        return Promise.reject(createBrowserAuthError(silentLogoutUnsupported));\n    }\n    /**\n     * Creates a Refresh Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    async createRefreshTokenClient(serverTelemetryManager, authorityUrl, azureCloudOptions) {\n        // Create auth module.\n        this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.correlationId);\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new RefreshTokenClient(clientConfig, this.performanceClient);\n    }\n}\n\nexport { SilentRefreshClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}