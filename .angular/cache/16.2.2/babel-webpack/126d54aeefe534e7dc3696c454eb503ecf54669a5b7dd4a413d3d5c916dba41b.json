{"ast":null,"code":"/*! @azure/msal-common v14.0.3 2023-09-05 */\n'use strict';\n\nimport { Constants } from '../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst AuthErrorMessage = {\n  unexpectedError: {\n    code: \"unexpected_error\",\n    desc: \"Unexpected error in authentication.\"\n  },\n  postRequestFailed: {\n    code: \"post_request_failed\",\n    desc: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\"\n  }\n};\n/**\n * General error class thrown by the MSAL.js library.\n */\nclass AuthError extends Error {\n  constructor(errorCode, errorMessage, suberror) {\n    const errorString = errorMessage ? `${errorCode}: ${errorMessage}` : errorCode;\n    super(errorString);\n    Object.setPrototypeOf(this, AuthError.prototype);\n    this.errorCode = errorCode || Constants.EMPTY_STRING;\n    this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n    this.subError = suberror || Constants.EMPTY_STRING;\n    this.name = \"AuthError\";\n  }\n  setCorrelationId(correlationId) {\n    this.correlationId = correlationId;\n  }\n  /**\n   * Creates an error that is thrown when something unexpected happens in the library.\n   * @param errDesc\n   */\n  static createUnexpectedError(errDesc) {\n    return new AuthError(AuthErrorMessage.unexpectedError.code, `${AuthErrorMessage.unexpectedError.desc}: ${errDesc}`);\n  }\n  /**\n   * Creates an error for post request failures.\n   * @param errDesc\n   * @returns\n   */\n  static createPostRequestFailed(errDesc) {\n    return new AuthError(AuthErrorMessage.postRequestFailed.code, `${AuthErrorMessage.postRequestFailed.desc}: ${errDesc}`);\n  }\n}\nexport { AuthError, AuthErrorMessage };","map":{"version":3,"names":["Constants","AuthErrorMessage","unexpectedError","code","desc","postRequestFailed","AuthError","Error","constructor","errorCode","errorMessage","suberror","errorString","Object","setPrototypeOf","prototype","EMPTY_STRING","subError","name","setCorrelationId","correlationId","createUnexpectedError","errDesc","createPostRequestFailed"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-common/dist/error/AuthError.mjs"],"sourcesContent":["/*! @azure/msal-common v14.0.3 2023-09-05 */\n'use strict';\nimport { Constants } from '../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst AuthErrorMessage = {\n    unexpectedError: {\n        code: \"unexpected_error\",\n        desc: \"Unexpected error in authentication.\",\n    },\n    postRequestFailed: {\n        code: \"post_request_failed\",\n        desc: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\n    },\n};\n/**\n * General error class thrown by the MSAL.js library.\n */\nclass AuthError extends Error {\n    constructor(errorCode, errorMessage, suberror) {\n        const errorString = errorMessage\n            ? `${errorCode}: ${errorMessage}`\n            : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n        this.subError = suberror || Constants.EMPTY_STRING;\n        this.name = \"AuthError\";\n    }\n    setCorrelationId(correlationId) {\n        this.correlationId = correlationId;\n    }\n    /**\n     * Creates an error that is thrown when something unexpected happens in the library.\n     * @param errDesc\n     */\n    static createUnexpectedError(errDesc) {\n        return new AuthError(AuthErrorMessage.unexpectedError.code, `${AuthErrorMessage.unexpectedError.desc}: ${errDesc}`);\n    }\n    /**\n     * Creates an error for post request failures.\n     * @param errDesc\n     * @returns\n     */\n    static createPostRequestFailed(errDesc) {\n        return new AuthError(AuthErrorMessage.postRequestFailed.code, `${AuthErrorMessage.postRequestFailed.desc}: ${errDesc}`);\n    }\n}\n\nexport { AuthError, AuthErrorMessage };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,SAASA,SAAS,QAAQ,wBAAwB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAG;EACrBC,eAAe,EAAE;IACbC,IAAI,EAAE,kBAAkB;IACxBC,IAAI,EAAE;EACV,CAAC;EACDC,iBAAiB,EAAE;IACfF,IAAI,EAAE,qBAAqB;IAC3BC,IAAI,EAAE;EACV;AACJ,CAAC;AACD;AACA;AACA;AACA,MAAME,SAAS,SAASC,KAAK,CAAC;EAC1BC,WAAWA,CAACC,SAAS,EAAEC,YAAY,EAAEC,QAAQ,EAAE;IAC3C,MAAMC,WAAW,GAAGF,YAAY,GACzB,GAAED,SAAU,KAAIC,YAAa,EAAC,GAC/BD,SAAS;IACf,KAAK,CAACG,WAAW,CAAC;IAClBC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAER,SAAS,CAACS,SAAS,CAAC;IAChD,IAAI,CAACN,SAAS,GAAGA,SAAS,IAAIT,SAAS,CAACgB,YAAY;IACpD,IAAI,CAACN,YAAY,GAAGA,YAAY,IAAIV,SAAS,CAACgB,YAAY;IAC1D,IAAI,CAACC,QAAQ,GAAGN,QAAQ,IAAIX,SAAS,CAACgB,YAAY;IAClD,IAAI,CAACE,IAAI,GAAG,WAAW;EAC3B;EACAC,gBAAgBA,CAACC,aAAa,EAAE;IAC5B,IAAI,CAACA,aAAa,GAAGA,aAAa;EACtC;EACA;AACJ;AACA;AACA;EACI,OAAOC,qBAAqBA,CAACC,OAAO,EAAE;IAClC,OAAO,IAAIhB,SAAS,CAACL,gBAAgB,CAACC,eAAe,CAACC,IAAI,EAAG,GAAEF,gBAAgB,CAACC,eAAe,CAACE,IAAK,KAAIkB,OAAQ,EAAC,CAAC;EACvH;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOC,uBAAuBA,CAACD,OAAO,EAAE;IACpC,OAAO,IAAIhB,SAAS,CAACL,gBAAgB,CAACI,iBAAiB,CAACF,IAAI,EAAG,GAAEF,gBAAgB,CAACI,iBAAiB,CAACD,IAAK,KAAIkB,OAAQ,EAAC,CAAC;EAC3H;AACJ;AAEA,SAAShB,SAAS,EAAEL,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}