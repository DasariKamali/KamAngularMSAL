{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\nimport { EventType } from './EventType.mjs';\nimport { InteractionType, InteractionStatus } from '../utils/BrowserConstants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass EventMessageUtils {\n  /**\n   * Gets interaction status from event message\n   * @param message\n   * @param currentStatus\n   */\n  static getInteractionStatusFromEvent(message, currentStatus) {\n    switch (message.eventType) {\n      case EventType.LOGIN_START:\n        return InteractionStatus.Login;\n      case EventType.SSO_SILENT_START:\n        return InteractionStatus.SsoSilent;\n      case EventType.ACQUIRE_TOKEN_START:\n        if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n          return InteractionStatus.AcquireToken;\n        }\n        break;\n      case EventType.HANDLE_REDIRECT_START:\n        return InteractionStatus.HandleRedirect;\n      case EventType.LOGOUT_START:\n        return InteractionStatus.Logout;\n      case EventType.SSO_SILENT_SUCCESS:\n      case EventType.SSO_SILENT_FAILURE:\n        if (currentStatus && currentStatus !== InteractionStatus.SsoSilent) {\n          // Prevent this event from clearing any status other than ssoSilent\n          break;\n        }\n        return InteractionStatus.None;\n      case EventType.LOGOUT_END:\n        if (currentStatus && currentStatus !== InteractionStatus.Logout) {\n          // Prevent this event from clearing any status other than logout\n          break;\n        }\n        return InteractionStatus.None;\n      case EventType.HANDLE_REDIRECT_END:\n        if (currentStatus && currentStatus !== InteractionStatus.HandleRedirect) {\n          // Prevent this event from clearing any status other than handleRedirect\n          break;\n        }\n        return InteractionStatus.None;\n      case EventType.LOGIN_SUCCESS:\n      case EventType.LOGIN_FAILURE:\n      case EventType.ACQUIRE_TOKEN_SUCCESS:\n      case EventType.ACQUIRE_TOKEN_FAILURE:\n      case EventType.RESTORE_FROM_BFCACHE:\n        if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n          if (currentStatus && currentStatus !== InteractionStatus.Login && currentStatus !== InteractionStatus.AcquireToken) {\n            // Prevent this event from clearing any status other than login or acquireToken\n            break;\n          }\n          return InteractionStatus.None;\n        }\n        break;\n    }\n    return null;\n  }\n}\nexport { EventMessageUtils };","map":{"version":3,"names":["EventType","InteractionType","InteractionStatus","EventMessageUtils","getInteractionStatusFromEvent","message","currentStatus","eventType","LOGIN_START","Login","SSO_SILENT_START","SsoSilent","ACQUIRE_TOKEN_START","interactionType","Redirect","Popup","AcquireToken","HANDLE_REDIRECT_START","HandleRedirect","LOGOUT_START","Logout","SSO_SILENT_SUCCESS","SSO_SILENT_FAILURE","None","LOGOUT_END","HANDLE_REDIRECT_END","LOGIN_SUCCESS","LOGIN_FAILURE","ACQUIRE_TOKEN_SUCCESS","ACQUIRE_TOKEN_FAILURE","RESTORE_FROM_BFCACHE"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-browser/dist/event/EventMessage.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\nimport { EventType } from './EventType.mjs';\nimport { InteractionType, InteractionStatus } from '../utils/BrowserConstants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass EventMessageUtils {\n    /**\n     * Gets interaction status from event message\n     * @param message\n     * @param currentStatus\n     */\n    static getInteractionStatusFromEvent(message, currentStatus) {\n        switch (message.eventType) {\n            case EventType.LOGIN_START:\n                return InteractionStatus.Login;\n            case EventType.SSO_SILENT_START:\n                return InteractionStatus.SsoSilent;\n            case EventType.ACQUIRE_TOKEN_START:\n                if (message.interactionType === InteractionType.Redirect ||\n                    message.interactionType === InteractionType.Popup) {\n                    return InteractionStatus.AcquireToken;\n                }\n                break;\n            case EventType.HANDLE_REDIRECT_START:\n                return InteractionStatus.HandleRedirect;\n            case EventType.LOGOUT_START:\n                return InteractionStatus.Logout;\n            case EventType.SSO_SILENT_SUCCESS:\n            case EventType.SSO_SILENT_FAILURE:\n                if (currentStatus &&\n                    currentStatus !== InteractionStatus.SsoSilent) {\n                    // Prevent this event from clearing any status other than ssoSilent\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGOUT_END:\n                if (currentStatus &&\n                    currentStatus !== InteractionStatus.Logout) {\n                    // Prevent this event from clearing any status other than logout\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.HANDLE_REDIRECT_END:\n                if (currentStatus &&\n                    currentStatus !== InteractionStatus.HandleRedirect) {\n                    // Prevent this event from clearing any status other than handleRedirect\n                    break;\n                }\n                return InteractionStatus.None;\n            case EventType.LOGIN_SUCCESS:\n            case EventType.LOGIN_FAILURE:\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\n            case EventType.ACQUIRE_TOKEN_FAILURE:\n            case EventType.RESTORE_FROM_BFCACHE:\n                if (message.interactionType === InteractionType.Redirect ||\n                    message.interactionType === InteractionType.Popup) {\n                    if (currentStatus &&\n                        currentStatus !== InteractionStatus.Login &&\n                        currentStatus !== InteractionStatus.AcquireToken) {\n                        // Prevent this event from clearing any status other than login or acquireToken\n                        break;\n                    }\n                    return InteractionStatus.None;\n                }\n                break;\n        }\n        return null;\n    }\n}\n\nexport { EventMessageUtils };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,+BAA+B;;AAElF;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,CAAC;EACpB;AACJ;AACA;AACA;AACA;EACI,OAAOC,6BAA6BA,CAACC,OAAO,EAAEC,aAAa,EAAE;IACzD,QAAQD,OAAO,CAACE,SAAS;MACrB,KAAKP,SAAS,CAACQ,WAAW;QACtB,OAAON,iBAAiB,CAACO,KAAK;MAClC,KAAKT,SAAS,CAACU,gBAAgB;QAC3B,OAAOR,iBAAiB,CAACS,SAAS;MACtC,KAAKX,SAAS,CAACY,mBAAmB;QAC9B,IAAIP,OAAO,CAACQ,eAAe,KAAKZ,eAAe,CAACa,QAAQ,IACpDT,OAAO,CAACQ,eAAe,KAAKZ,eAAe,CAACc,KAAK,EAAE;UACnD,OAAOb,iBAAiB,CAACc,YAAY;QACzC;QACA;MACJ,KAAKhB,SAAS,CAACiB,qBAAqB;QAChC,OAAOf,iBAAiB,CAACgB,cAAc;MAC3C,KAAKlB,SAAS,CAACmB,YAAY;QACvB,OAAOjB,iBAAiB,CAACkB,MAAM;MACnC,KAAKpB,SAAS,CAACqB,kBAAkB;MACjC,KAAKrB,SAAS,CAACsB,kBAAkB;QAC7B,IAAIhB,aAAa,IACbA,aAAa,KAAKJ,iBAAiB,CAACS,SAAS,EAAE;UAC/C;UACA;QACJ;QACA,OAAOT,iBAAiB,CAACqB,IAAI;MACjC,KAAKvB,SAAS,CAACwB,UAAU;QACrB,IAAIlB,aAAa,IACbA,aAAa,KAAKJ,iBAAiB,CAACkB,MAAM,EAAE;UAC5C;UACA;QACJ;QACA,OAAOlB,iBAAiB,CAACqB,IAAI;MACjC,KAAKvB,SAAS,CAACyB,mBAAmB;QAC9B,IAAInB,aAAa,IACbA,aAAa,KAAKJ,iBAAiB,CAACgB,cAAc,EAAE;UACpD;UACA;QACJ;QACA,OAAOhB,iBAAiB,CAACqB,IAAI;MACjC,KAAKvB,SAAS,CAAC0B,aAAa;MAC5B,KAAK1B,SAAS,CAAC2B,aAAa;MAC5B,KAAK3B,SAAS,CAAC4B,qBAAqB;MACpC,KAAK5B,SAAS,CAAC6B,qBAAqB;MACpC,KAAK7B,SAAS,CAAC8B,oBAAoB;QAC/B,IAAIzB,OAAO,CAACQ,eAAe,KAAKZ,eAAe,CAACa,QAAQ,IACpDT,OAAO,CAACQ,eAAe,KAAKZ,eAAe,CAACc,KAAK,EAAE;UACnD,IAAIT,aAAa,IACbA,aAAa,KAAKJ,iBAAiB,CAACO,KAAK,IACzCH,aAAa,KAAKJ,iBAAiB,CAACc,YAAY,EAAE;YAClD;YACA;UACJ;UACA,OAAOd,iBAAiB,CAACqB,IAAI;QACjC;QACA;IACR;IACA,OAAO,IAAI;EACf;AACJ;AAEA,SAASpB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}