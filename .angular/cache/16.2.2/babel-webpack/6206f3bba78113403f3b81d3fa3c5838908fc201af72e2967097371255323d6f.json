{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\nimport _asyncToGenerator from \"C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { KEY_FORMAT_JWK } from '../utils/BrowserConstants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass ModernBrowserCrypto {\n  getRandomValues(dataBuffer) {\n    return window.crypto.getRandomValues(dataBuffer);\n  }\n  generateKey(algorithm, extractable, keyUsages) {\n    return _asyncToGenerator(function* () {\n      return window.crypto.subtle.generateKey(algorithm, extractable, keyUsages);\n    })();\n  }\n  exportKey(key) {\n    return _asyncToGenerator(function* () {\n      return window.crypto.subtle.exportKey(KEY_FORMAT_JWK, key);\n    })();\n  }\n  importKey(keyData, algorithm, extractable, keyUsages) {\n    return _asyncToGenerator(function* () {\n      return window.crypto.subtle.importKey(KEY_FORMAT_JWK, keyData, algorithm, extractable, keyUsages);\n    })();\n  }\n  sign(algorithm, key, data) {\n    return _asyncToGenerator(function* () {\n      return window.crypto.subtle.sign(algorithm, key, data);\n    })();\n  }\n  digest(algorithm, data) {\n    return _asyncToGenerator(function* () {\n      return window.crypto.subtle.digest(algorithm, data);\n    })();\n  }\n}\nexport { ModernBrowserCrypto };","map":{"version":3,"names":["_asyncToGenerator","KEY_FORMAT_JWK","ModernBrowserCrypto","getRandomValues","dataBuffer","window","crypto","generateKey","algorithm","extractable","keyUsages","subtle","exportKey","key","importKey","keyData","sign","data","digest"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-browser/dist/crypto/ModernBrowserCrypto.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\nimport { KEY_FORMAT_JWK } from '../utils/BrowserConstants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass ModernBrowserCrypto {\n    getRandomValues(dataBuffer) {\n        return window.crypto.getRandomValues(dataBuffer);\n    }\n    async generateKey(algorithm, extractable, keyUsages) {\n        return window.crypto.subtle.generateKey(algorithm, extractable, keyUsages);\n    }\n    async exportKey(key) {\n        return window.crypto.subtle.exportKey(KEY_FORMAT_JWK, key);\n    }\n    async importKey(keyData, algorithm, extractable, keyUsages) {\n        return window.crypto.subtle.importKey(KEY_FORMAT_JWK, keyData, algorithm, extractable, keyUsages);\n    }\n    async sign(algorithm, key, data) {\n        return window.crypto.subtle.sign(algorithm, key, data);\n    }\n    async digest(algorithm, data) {\n        return window.crypto.subtle.digest(algorithm, data);\n    }\n}\n\nexport { ModernBrowserCrypto };\n"],"mappings":"AAAA;AACA,YAAY;;AAAC,OAAAA,iBAAA;AACb,SAASC,cAAc,QAAQ,+BAA+B;;AAE9D;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,CAAC;EACtBC,eAAeA,CAACC,UAAU,EAAE;IACxB,OAAOC,MAAM,CAACC,MAAM,CAACH,eAAe,CAACC,UAAU,CAAC;EACpD;EACMG,WAAWA,CAACC,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAE;IAAA,OAAAV,iBAAA;MACjD,OAAOK,MAAM,CAACC,MAAM,CAACK,MAAM,CAACJ,WAAW,CAACC,SAAS,EAAEC,WAAW,EAAEC,SAAS,CAAC;IAAC;EAC/E;EACME,SAASA,CAACC,GAAG,EAAE;IAAA,OAAAb,iBAAA;MACjB,OAAOK,MAAM,CAACC,MAAM,CAACK,MAAM,CAACC,SAAS,CAACX,cAAc,EAAEY,GAAG,CAAC;IAAC;EAC/D;EACMC,SAASA,CAACC,OAAO,EAAEP,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAE;IAAA,OAAAV,iBAAA;MACxD,OAAOK,MAAM,CAACC,MAAM,CAACK,MAAM,CAACG,SAAS,CAACb,cAAc,EAAEc,OAAO,EAAEP,SAAS,EAAEC,WAAW,EAAEC,SAAS,CAAC;IAAC;EACtG;EACMM,IAAIA,CAACR,SAAS,EAAEK,GAAG,EAAEI,IAAI,EAAE;IAAA,OAAAjB,iBAAA;MAC7B,OAAOK,MAAM,CAACC,MAAM,CAACK,MAAM,CAACK,IAAI,CAACR,SAAS,EAAEK,GAAG,EAAEI,IAAI,CAAC;IAAC;EAC3D;EACMC,MAAMA,CAACV,SAAS,EAAES,IAAI,EAAE;IAAA,OAAAjB,iBAAA;MAC1B,OAAOK,MAAM,CAACC,MAAM,CAACK,MAAM,CAACO,MAAM,CAACV,SAAS,EAAES,IAAI,CAAC;IAAC;EACxD;AACJ;AAEA,SAASf,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}