{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\nimport { Constants } from '@azure/msal-common';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Utility functions for strings in a browser. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nclass BrowserStringUtils {\n  /**\n   * Converts string to Uint8Array\n   * @param sDOMStr\n   */\n  static stringToUtf8Arr(sDOMStr) {\n    let nChr;\n    let nArrLen = 0;\n    const nStrLen = sDOMStr.length;\n    /* mapping... */\n    for (let nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\n      nChr = sDOMStr.charCodeAt(nMapIdx);\n      nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\n    }\n    const aBytes = new Uint8Array(nArrLen);\n    /* transcription... */\n    for (let nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\n      nChr = sDOMStr.charCodeAt(nChrIdx);\n      if (nChr < 128) {\n        /* one byte */\n        aBytes[nIdx++] = nChr;\n      } else if (nChr < 0x800) {\n        /* two bytes */\n        aBytes[nIdx++] = 192 + (nChr >>> 6);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } else if (nChr < 0x10000) {\n        /* three bytes */\n        aBytes[nIdx++] = 224 + (nChr >>> 12);\n        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } else if (nChr < 0x200000) {\n        /* four bytes */\n        aBytes[nIdx++] = 240 + (nChr >>> 18);\n        aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } else if (nChr < 0x4000000) {\n        /* five bytes */\n        aBytes[nIdx++] = 248 + (nChr >>> 24);\n        aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } /* if (nChr <= 0x7fffffff) */else {\n        /* six bytes */\n        aBytes[nIdx++] = 252 + (nChr >>> 30);\n        aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      }\n    }\n    return aBytes;\n  }\n  /**\n   * Converts Uint8Array to a string\n   * @param aBytes\n   */\n  static utf8ArrToString(aBytes) {\n    let sView = Constants.EMPTY_STRING;\n    for (let nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\n      nPart = aBytes[nIdx];\n      sView += String.fromCharCode(nPart > 251 && nPart < 254 && nIdx + 5 < nLen /* six bytes */ ? /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\n      (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 247 && nPart < 252 && nIdx + 4 < nLen /* five bytes */ ? (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 239 && nPart < 248 && nIdx + 3 < nLen /* four bytes */ ? (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 223 && nPart < 240 && nIdx + 2 < nLen /* three bytes */ ? (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 191 && nPart < 224 && nIdx + 1 < nLen /* two bytes */ ? (nPart - 192 << 6) + aBytes[++nIdx] - 128 : /* nPart < 127 ? */ /* one byte */\n      nPart);\n    }\n    return sView;\n  }\n  /**\n   * Returns stringified jwk.\n   * @param jwk\n   */\n  static getSortedObjectString(obj) {\n    return JSON.stringify(obj, Object.keys(obj).sort());\n  }\n}\nexport { BrowserStringUtils };","map":{"version":3,"names":["Constants","BrowserStringUtils","stringToUtf8Arr","sDOMStr","nChr","nArrLen","nStrLen","length","nMapIdx","charCodeAt","aBytes","Uint8Array","nIdx","nChrIdx","utf8ArrToString","sView","EMPTY_STRING","nPart","nLen","String","fromCharCode","getSortedObjectString","obj","JSON","stringify","Object","keys","sort"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-browser/dist/utils/BrowserStringUtils.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\nimport { Constants } from '@azure/msal-common';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Utility functions for strings in a browser. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nclass BrowserStringUtils {\n    /**\n     * Converts string to Uint8Array\n     * @param sDOMStr\n     */\n    static stringToUtf8Arr(sDOMStr) {\n        let nChr;\n        let nArrLen = 0;\n        const nStrLen = sDOMStr.length;\n        /* mapping... */\n        for (let nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\n            nChr = sDOMStr.charCodeAt(nMapIdx);\n            nArrLen +=\n                nChr < 0x80\n                    ? 1\n                    : nChr < 0x800\n                        ? 2\n                        : nChr < 0x10000\n                            ? 3\n                            : nChr < 0x200000\n                                ? 4\n                                : nChr < 0x4000000\n                                    ? 5\n                                    : 6;\n        }\n        const aBytes = new Uint8Array(nArrLen);\n        /* transcription... */\n        for (let nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\n            nChr = sDOMStr.charCodeAt(nChrIdx);\n            if (nChr < 128) {\n                /* one byte */\n                aBytes[nIdx++] = nChr;\n            }\n            else if (nChr < 0x800) {\n                /* two bytes */\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            }\n            else if (nChr < 0x10000) {\n                /* three bytes */\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\n                aBytes[nIdx++] = 128 + ((nChr >>> 6) & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            }\n            else if (nChr < 0x200000) {\n                /* four bytes */\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\n                aBytes[nIdx++] = 128 + ((nChr >>> 12) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 6) & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            }\n            else if (nChr < 0x4000000) {\n                /* five bytes */\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\n                aBytes[nIdx++] = 128 + ((nChr >>> 18) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 12) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 6) & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } /* if (nChr <= 0x7fffffff) */\n            else {\n                /* six bytes */\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\n                aBytes[nIdx++] = 128 + ((nChr >>> 24) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 18) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 12) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 6) & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            }\n        }\n        return aBytes;\n    }\n    /**\n     * Converts Uint8Array to a string\n     * @param aBytes\n     */\n    static utf8ArrToString(aBytes) {\n        let sView = Constants.EMPTY_STRING;\n        for (let nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\n            nPart = aBytes[nIdx];\n            sView += String.fromCharCode(nPart > 251 && nPart < 254 && nIdx + 5 < nLen /* six bytes */\n                ? /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\n                    (nPart - 252) * 1073741824 +\n                        ((aBytes[++nIdx] - 128) << 24) +\n                        ((aBytes[++nIdx] - 128) << 18) +\n                        ((aBytes[++nIdx] - 128) << 12) +\n                        ((aBytes[++nIdx] - 128) << 6) +\n                        aBytes[++nIdx] -\n                        128\n                : nPart > 247 &&\n                    nPart < 252 &&\n                    nIdx + 4 < nLen /* five bytes */\n                    ? ((nPart - 248) << 24) +\n                        ((aBytes[++nIdx] - 128) << 18) +\n                        ((aBytes[++nIdx] - 128) << 12) +\n                        ((aBytes[++nIdx] - 128) << 6) +\n                        aBytes[++nIdx] -\n                        128\n                    : nPart > 239 &&\n                        nPart < 248 &&\n                        nIdx + 3 < nLen /* four bytes */\n                        ? ((nPart - 240) << 18) +\n                            ((aBytes[++nIdx] - 128) << 12) +\n                            ((aBytes[++nIdx] - 128) << 6) +\n                            aBytes[++nIdx] -\n                            128\n                        : nPart > 223 &&\n                            nPart < 240 &&\n                            nIdx + 2 < nLen /* three bytes */\n                            ? ((nPart - 224) << 12) +\n                                ((aBytes[++nIdx] - 128) << 6) +\n                                aBytes[++nIdx] -\n                                128\n                            : nPart > 191 &&\n                                nPart < 224 &&\n                                nIdx + 1 < nLen /* two bytes */\n                                ? ((nPart - 192) << 6) + aBytes[++nIdx] - 128\n                                : /* nPart < 127 ? */ /* one byte */\n                                    nPart);\n        }\n        return sView;\n    }\n    /**\n     * Returns stringified jwk.\n     * @param jwk\n     */\n    static getSortedObjectString(obj) {\n        return JSON.stringify(obj, Object.keys(obj).sort());\n    }\n}\n\nexport { BrowserStringUtils };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}