{"ast":null,"code":"var _class;\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MsalModule, MsalService, MSAL_INSTANCE } from '@azure/msal-angular';\nimport { PublicClientApplication } from '@azure/msal-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport * as i0 from \"@angular/core\";\n// MSAL Configuration Factory\nexport function MSALInstanceFactory() {\n  return new PublicClientApplication({\n    auth: {\n      clientId: '8a16e38b-6c88-48d4-b012-691b7452759a',\n      authority: 'https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47',\n      redirectUri: 'http://localhost:4200' // Make sure this matches your app's configuration\n    },\n\n    cache: {\n      cacheLocation: 'localStorage',\n      storeAuthStateInCookie: true\n    }\n  });\n}\nexport class AppModule {}\n_class = AppModule;\n_class.ɵfac = function AppModule_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _class,\n  bootstrap: [AppComponent]\n});\n_class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: MSAL_INSTANCE,\n    useFactory: MSALInstanceFactory\n  }, MsalService],\n  imports: [BrowserModule, AppRoutingModule, MsalModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent],\n    imports: [BrowserModule, AppRoutingModule, MsalModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","MsalModule","MsalService","MSAL_INSTANCE","PublicClientApplication","AppRoutingModule","AppComponent","MSALInstanceFactory","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","AppModule","bootstrap","provide","useFactory","imports","declarations"],"sources":["C:\\Users\\v-dkamali\\Documents\\AngularMSALAD\\microsoft-login\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MsalModule, MsalService, MSAL_INSTANCE } from '@azure/msal-angular';\nimport { IPublicClientApplication, PublicClientApplication } from '@azure/msal-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// MSAL Configuration Factory\nexport function MSALInstanceFactory(): IPublicClientApplication {\n  return new PublicClientApplication({\n    auth: {\n      clientId: '8a16e38b-6c88-48d4-b012-691b7452759a', // Replace with your client ID\n      authority: 'https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47', // Replace with your tenant ID\n      redirectUri: 'http://localhost:4200' // Make sure this matches your app's configuration\n    },\n    cache: {\n      cacheLocation: 'localStorage', // or 'sessionStorage'\n      storeAuthStateInCookie: true\n    }\n  });\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MsalModule\n  ],\n  providers: [\n    {\n      provide: MSAL_INSTANCE,\n      useFactory: MSALInstanceFactory\n    },\n    MsalService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"],"mappings":";AACA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,UAAU,EAAEC,WAAW,EAAEC,aAAa,QAAQ,qBAAqB;AAC5E,SAAmCC,uBAAuB,QAAQ,qBAAqB;AACvF,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;;AAE9C;AACA,OAAM,SAAUC,mBAAmBA,CAAA;EACjC,OAAO,IAAIH,uBAAuB,CAAC;IACjCI,IAAI,EAAE;MACJC,QAAQ,EAAE,sCAAsC;MAChDC,SAAS,EAAE,wEAAwE;MACnFC,WAAW,EAAE,uBAAuB,CAAC;KACtC;;IACDC,KAAK,EAAE;MACLC,aAAa,EAAE,cAAc;MAC7BC,sBAAsB,EAAE;;GAE3B,CAAC;AACJ;AAoBA,OAAM,MAAOC,SAAS;SAATA,SAAS;;mBAATA,MAAS;AAAA;;QAATA,MAAS;EAAAC,SAAA,GAFRV,YAAY;AAAA;;aAPb,CACT;IACEW,OAAO,EAAEd,aAAa;IACtBe,UAAU,EAAEX;GACb,EACDL,WAAW,CACZ;EAAAiB,OAAA,GAVCnB,aAAa,EACbK,gBAAgB,EAChBJ,UAAU;AAAA;;2EAWDc,SAAS;IAAAK,YAAA,GAhBlBd,YAAY;IAAAa,OAAA,GAGZnB,aAAa,EACbK,gBAAgB,EAChBJ,UAAU;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}