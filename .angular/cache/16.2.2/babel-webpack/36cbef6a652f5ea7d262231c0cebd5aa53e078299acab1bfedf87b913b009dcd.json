{"ast":null,"code":"/*! @azure/msal-common v14.0.3 2023-09-05 */\n'use strict';\n\nimport { ClientAuthError } from '../error/ClientAuthError.mjs';\nimport { Separators, Constants } from '../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Function to build a client info object from server clientInfo string\n * @param rawClientInfo\n * @param crypto\n */\nfunction buildClientInfo(rawClientInfo, crypto) {\n  if (!rawClientInfo) {\n    throw ClientAuthError.createClientInfoEmptyError();\n  }\n  try {\n    const decodedClientInfo = crypto.base64Decode(rawClientInfo);\n    return JSON.parse(decodedClientInfo);\n  } catch (e) {\n    throw ClientAuthError.createClientInfoDecodingError(e.message);\n  }\n}\n/**\n * Function to build a client info object from cached homeAccountId string\n * @param homeAccountId\n */\nfunction buildClientInfoFromHomeAccountId(homeAccountId) {\n  if (!homeAccountId) {\n    throw ClientAuthError.createClientInfoDecodingError(\"Home account ID was empty.\");\n  }\n  const clientInfoParts = homeAccountId.split(Separators.CLIENT_INFO_SEPARATOR, 2);\n  return {\n    uid: clientInfoParts[0],\n    utid: clientInfoParts.length < 2 ? Constants.EMPTY_STRING : clientInfoParts[1]\n  };\n}\nexport { buildClientInfo, buildClientInfoFromHomeAccountId };","map":{"version":3,"names":["ClientAuthError","Separators","Constants","buildClientInfo","rawClientInfo","crypto","createClientInfoEmptyError","decodedClientInfo","base64Decode","JSON","parse","e","createClientInfoDecodingError","message","buildClientInfoFromHomeAccountId","homeAccountId","clientInfoParts","split","CLIENT_INFO_SEPARATOR","uid","utid","length","EMPTY_STRING"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-common/dist/account/ClientInfo.mjs"],"sourcesContent":["/*! @azure/msal-common v14.0.3 2023-09-05 */\n'use strict';\nimport { ClientAuthError } from '../error/ClientAuthError.mjs';\nimport { Separators, Constants } from '../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Function to build a client info object from server clientInfo string\n * @param rawClientInfo\n * @param crypto\n */\nfunction buildClientInfo(rawClientInfo, crypto) {\n    if (!rawClientInfo) {\n        throw ClientAuthError.createClientInfoEmptyError();\n    }\n    try {\n        const decodedClientInfo = crypto.base64Decode(rawClientInfo);\n        return JSON.parse(decodedClientInfo);\n    }\n    catch (e) {\n        throw ClientAuthError.createClientInfoDecodingError(e.message);\n    }\n}\n/**\n * Function to build a client info object from cached homeAccountId string\n * @param homeAccountId\n */\nfunction buildClientInfoFromHomeAccountId(homeAccountId) {\n    if (!homeAccountId) {\n        throw ClientAuthError.createClientInfoDecodingError(\"Home account ID was empty.\");\n    }\n    const clientInfoParts = homeAccountId.split(Separators.CLIENT_INFO_SEPARATOR, 2);\n    return {\n        uid: clientInfoParts[0],\n        utid: clientInfoParts.length < 2\n            ? Constants.EMPTY_STRING\n            : clientInfoParts[1],\n    };\n}\n\nexport { buildClientInfo, buildClientInfoFromHomeAccountId };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,SAASA,eAAe,QAAQ,8BAA8B;AAC9D,SAASC,UAAU,EAAEC,SAAS,QAAQ,wBAAwB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,aAAa,EAAEC,MAAM,EAAE;EAC5C,IAAI,CAACD,aAAa,EAAE;IAChB,MAAMJ,eAAe,CAACM,0BAA0B,CAAC,CAAC;EACtD;EACA,IAAI;IACA,MAAMC,iBAAiB,GAAGF,MAAM,CAACG,YAAY,CAACJ,aAAa,CAAC;IAC5D,OAAOK,IAAI,CAACC,KAAK,CAACH,iBAAiB,CAAC;EACxC,CAAC,CACD,OAAOI,CAAC,EAAE;IACN,MAAMX,eAAe,CAACY,6BAA6B,CAACD,CAAC,CAACE,OAAO,CAAC;EAClE;AACJ;AACA;AACA;AACA;AACA;AACA,SAASC,gCAAgCA,CAACC,aAAa,EAAE;EACrD,IAAI,CAACA,aAAa,EAAE;IAChB,MAAMf,eAAe,CAACY,6BAA6B,CAAC,4BAA4B,CAAC;EACrF;EACA,MAAMI,eAAe,GAAGD,aAAa,CAACE,KAAK,CAAChB,UAAU,CAACiB,qBAAqB,EAAE,CAAC,CAAC;EAChF,OAAO;IACHC,GAAG,EAAEH,eAAe,CAAC,CAAC,CAAC;IACvBI,IAAI,EAAEJ,eAAe,CAACK,MAAM,GAAG,CAAC,GAC1BnB,SAAS,CAACoB,YAAY,GACtBN,eAAe,CAAC,CAAC;EAC3B,CAAC;AACL;AAEA,SAASb,eAAe,EAAEW,gCAAgC"},"metadata":{},"sourceType":"module","externalDependencies":[]}