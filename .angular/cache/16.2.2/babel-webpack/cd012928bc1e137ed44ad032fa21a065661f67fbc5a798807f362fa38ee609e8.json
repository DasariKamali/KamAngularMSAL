{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\nimport { AccountEntity, CacheManager } from '@azure/msal-common';\nimport { EventType } from './EventType.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass EventHandler {\n  constructor(logger, browserCrypto) {\n    this.eventCallbacks = new Map();\n    this.logger = logger;\n    this.browserCrypto = browserCrypto;\n    this.listeningToStorageEvents = false;\n    this.handleAccountCacheChange = this.handleAccountCacheChange.bind(this);\n  }\n  /**\n   * Adds event callbacks to array\n   * @param callback\n   */\n  addEventCallback(callback) {\n    if (typeof window !== \"undefined\") {\n      const callbackId = this.browserCrypto.createNewGuid();\n      this.eventCallbacks.set(callbackId, callback);\n      this.logger.verbose(`Event callback registered with id: ${callbackId}`);\n      return callbackId;\n    }\n    return null;\n  }\n  /**\n   * Removes callback with provided id from callback array\n   * @param callbackId\n   */\n  removeEventCallback(callbackId) {\n    this.eventCallbacks.delete(callbackId);\n    this.logger.verbose(`Event callback ${callbackId} removed.`);\n  }\n  /**\n   * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n   */\n  enableAccountStorageEvents() {\n    if (typeof window === \"undefined\") {\n      return;\n    }\n    if (!this.listeningToStorageEvents) {\n      this.logger.verbose(\"Adding account storage listener.\");\n      this.listeningToStorageEvents = true;\n      window.addEventListener(\"storage\", this.handleAccountCacheChange);\n    } else {\n      this.logger.verbose(\"Account storage listener already registered.\");\n    }\n  }\n  /**\n   * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n   */\n  disableAccountStorageEvents() {\n    if (typeof window === \"undefined\") {\n      return;\n    }\n    if (this.listeningToStorageEvents) {\n      this.logger.verbose(\"Removing account storage listener.\");\n      window.removeEventListener(\"storage\", this.handleAccountCacheChange);\n      this.listeningToStorageEvents = false;\n    } else {\n      this.logger.verbose(\"No account storage listener registered.\");\n    }\n  }\n  /**\n   * Emits events by calling callback with event message\n   * @param eventType\n   * @param interactionType\n   * @param payload\n   * @param error\n   */\n  emitEvent(eventType, interactionType, payload, error) {\n    if (typeof window !== \"undefined\") {\n      const message = {\n        eventType: eventType,\n        interactionType: interactionType || null,\n        payload: payload || null,\n        error: error || null,\n        timestamp: Date.now()\n      };\n      this.logger.info(`Emitting event: ${eventType}`);\n      this.eventCallbacks.forEach((callback, callbackId) => {\n        this.logger.verbose(`Emitting event to callback ${callbackId}: ${eventType}`);\n        callback.apply(null, [message]);\n      });\n    }\n  }\n  /**\n   * Emit account added/removed events when cached accounts are changed in a different tab or frame\n   */\n  handleAccountCacheChange(e) {\n    try {\n      const cacheValue = e.newValue || e.oldValue;\n      if (!cacheValue) {\n        return;\n      }\n      const parsedValue = JSON.parse(cacheValue);\n      if (typeof parsedValue !== \"object\" || !AccountEntity.isAccountEntity(parsedValue)) {\n        return;\n      }\n      const accountEntity = CacheManager.toObject(new AccountEntity(), parsedValue);\n      const accountInfo = accountEntity.getAccountInfo();\n      if (!e.oldValue && e.newValue) {\n        this.logger.info(\"Account was added to cache in a different window\");\n        this.emitEvent(EventType.ACCOUNT_ADDED, undefined, accountInfo);\n      } else if (!e.newValue && e.oldValue) {\n        this.logger.info(\"Account was removed from cache in a different window\");\n        this.emitEvent(EventType.ACCOUNT_REMOVED, undefined, accountInfo);\n      }\n    } catch (e) {\n      return;\n    }\n  }\n}\nexport { EventHandler };","map":{"version":3,"names":["AccountEntity","CacheManager","EventType","EventHandler","constructor","logger","browserCrypto","eventCallbacks","Map","listeningToStorageEvents","handleAccountCacheChange","bind","addEventCallback","callback","window","callbackId","createNewGuid","set","verbose","removeEventCallback","delete","enableAccountStorageEvents","addEventListener","disableAccountStorageEvents","removeEventListener","emitEvent","eventType","interactionType","payload","error","message","timestamp","Date","now","info","forEach","apply","e","cacheValue","newValue","oldValue","parsedValue","JSON","parse","isAccountEntity","accountEntity","toObject","accountInfo","getAccountInfo","ACCOUNT_ADDED","undefined","ACCOUNT_REMOVED"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-browser/dist/event/EventHandler.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\nimport { AccountEntity, CacheManager } from '@azure/msal-common';\nimport { EventType } from './EventType.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass EventHandler {\n    constructor(logger, browserCrypto) {\n        this.eventCallbacks = new Map();\n        this.logger = logger;\n        this.browserCrypto = browserCrypto;\n        this.listeningToStorageEvents = false;\n        this.handleAccountCacheChange =\n            this.handleAccountCacheChange.bind(this);\n    }\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback) {\n        if (typeof window !== \"undefined\") {\n            const callbackId = this.browserCrypto.createNewGuid();\n            this.eventCallbacks.set(callbackId, callback);\n            this.logger.verbose(`Event callback registered with id: ${callbackId}`);\n            return callbackId;\n        }\n        return null;\n    }\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId) {\n        this.eventCallbacks.delete(callbackId);\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\n    }\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents() {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n        if (!this.listeningToStorageEvents) {\n            this.logger.verbose(\"Adding account storage listener.\");\n            this.listeningToStorageEvents = true;\n            window.addEventListener(\"storage\", this.handleAccountCacheChange);\n        }\n        else {\n            this.logger.verbose(\"Account storage listener already registered.\");\n        }\n    }\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents() {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n        if (this.listeningToStorageEvents) {\n            this.logger.verbose(\"Removing account storage listener.\");\n            window.removeEventListener(\"storage\", this.handleAccountCacheChange);\n            this.listeningToStorageEvents = false;\n        }\n        else {\n            this.logger.verbose(\"No account storage listener registered.\");\n        }\n    }\n    /**\n     * Emits events by calling callback with event message\n     * @param eventType\n     * @param interactionType\n     * @param payload\n     * @param error\n     */\n    emitEvent(eventType, interactionType, payload, error) {\n        if (typeof window !== \"undefined\") {\n            const message = {\n                eventType: eventType,\n                interactionType: interactionType || null,\n                payload: payload || null,\n                error: error || null,\n                timestamp: Date.now(),\n            };\n            this.logger.info(`Emitting event: ${eventType}`);\n            this.eventCallbacks.forEach((callback, callbackId) => {\n                this.logger.verbose(`Emitting event to callback ${callbackId}: ${eventType}`);\n                callback.apply(null, [message]);\n            });\n        }\n    }\n    /**\n     * Emit account added/removed events when cached accounts are changed in a different tab or frame\n     */\n    handleAccountCacheChange(e) {\n        try {\n            const cacheValue = e.newValue || e.oldValue;\n            if (!cacheValue) {\n                return;\n            }\n            const parsedValue = JSON.parse(cacheValue);\n            if (typeof parsedValue !== \"object\" ||\n                !AccountEntity.isAccountEntity(parsedValue)) {\n                return;\n            }\n            const accountEntity = CacheManager.toObject(new AccountEntity(), parsedValue);\n            const accountInfo = accountEntity.getAccountInfo();\n            if (!e.oldValue && e.newValue) {\n                this.logger.info(\"Account was added to cache in a different window\");\n                this.emitEvent(EventType.ACCOUNT_ADDED, undefined, accountInfo);\n            }\n            else if (!e.newValue && e.oldValue) {\n                this.logger.info(\"Account was removed from cache in a different window\");\n                this.emitEvent(EventType.ACCOUNT_REMOVED, undefined, accountInfo);\n            }\n        }\n        catch (e) {\n            return;\n        }\n    }\n}\n\nexport { EventHandler };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}