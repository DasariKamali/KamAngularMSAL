{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@azure/msal-angular\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction AppComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AppComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.login());\n    });\n    i0.ɵɵtext(1, \"SIGN IN\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"You are logged in.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class AppComponent {\n  constructor(msalService) {\n    this.msalService = msalService;\n    this.title = 'microsoft-login';\n  }\n  isLoggedIn() {\n    return this.msalService.instance.getActiveAccount() != null;\n  }\n  login() {\n    this.msalService.loginPopup().subscribe(response => {\n      this.msalService.instance.setActiveAccount(response.account);\n    });\n  }\n}\n_class = AppComponent;\n_class.ɵfac = function AppComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.MsalService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-root\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"tr\")(2, \"td\");\n      i0.ɵɵtemplate(3, AppComponent_button_3_Template, 2, 0, \"button\", 0);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(4, AppComponent_div_4_Template, 3, 0, \"div\", 1);\n      i0.ɵɵelement(5, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn());\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterOutlet],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","AppComponent_button_3_Template_button_click_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","login","ɵɵtext","ɵɵelementEnd","AppComponent","constructor","msalService","title","isLoggedIn","instance","getActiveAccount","loginPopup","subscribe","response","setActiveAccount","account","ɵɵdirectiveInject","i1","MsalService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_button_3_Template","AppComponent_div_4_Template","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\v-dkamali\\Documents\\AngularMSALAD\\microsoft-login\\src\\app\\app.component.ts","C:\\Users\\v-dkamali\\Documents\\AngularMSALAD\\microsoft-login\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthenticationResult } from '@azure/msal-browser';\nimport { MsalService } from '@azure/msal-angular';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'microsoft-login';\n\n  constructor(private msalService: MsalService) {\n    \n  }\n\n  isLoggedIn() : boolean{\n    return this.msalService.instance.getActiveAccount() !=null\n  }\n\n  login() {\n    this.msalService.loginPopup().subscribe( (response: AuthenticationResult) => {\n      this.msalService.instance.setActiveAccount(response.account)\n    });\n  }\n}\n","<table>\n    <tr>\n        <td><button (click)=\"login()\" *ngIf=\"!isLoggedIn()\">SIGN IN</button></td>\n    </tr>\n</table>\n<div *ngIf=\"isLoggedIn()\">\n    <h3>You are logged in.</h3>\n</div>\n\n<router-outlet></router-outlet>\n"],"mappings":";;;;;;;;ICEYA,EAAA,CAAAC,cAAA,gBAAgD;IAAxCD,EAAA,CAAAE,UAAA,mBAAAC,uDAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAN,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAQ,WAAA,CAAAF,MAAA,CAAAG,KAAA,EAAO;IAAA,EAAC;IAAuBT,EAAA,CAAAU,MAAA,cAAO;IAAAV,EAAA,CAAAW,YAAA,EAAS;;;;;IAG5EX,EAAA,CAAAC,cAAA,UAA0B;IAClBD,EAAA,CAAAU,MAAA,yBAAkB;IAAAV,EAAA,CAAAW,YAAA,EAAK;;;ADG/B,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,KAAK,GAAG,iBAAiB;EAIzB;EAEAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,WAAW,CAACG,QAAQ,CAACC,gBAAgB,EAAE,IAAG,IAAI;EAC5D;EAEAT,KAAKA,CAAA;IACH,IAAI,CAACK,WAAW,CAACK,UAAU,EAAE,CAACC,SAAS,CAAGC,QAA8B,IAAI;MAC1E,IAAI,CAACP,WAAW,CAACG,QAAQ,CAACK,gBAAgB,CAACD,QAAQ,CAACE,OAAO,CAAC;IAC9D,CAAC,CAAC;EACJ;;SAfWX,YAAY;;mBAAZA,MAAY,EAAAZ,EAAA,CAAAwB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;QAAZd,MAAY;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTzBjC,EAAA,CAAAC,cAAA,YAAO;MAEKD,EAAA,CAAAmC,UAAA,IAAAC,8BAAA,oBAAgE;MAAApC,EAAA,CAAAW,YAAA,EAAK;MAGjFX,EAAA,CAAAmC,UAAA,IAAAE,2BAAA,iBAEM;MAENrC,EAAA,CAAAsC,SAAA,oBAA+B;;;MAPQtC,EAAA,CAAAuC,SAAA,GAAmB;MAAnBvC,EAAA,CAAAwC,UAAA,UAAAN,GAAA,CAAAlB,UAAA,GAAmB;MAGpDhB,EAAA,CAAAuC,SAAA,GAAkB;MAAlBvC,EAAA,CAAAwC,UAAA,SAAAN,GAAA,CAAAlB,UAAA,GAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}