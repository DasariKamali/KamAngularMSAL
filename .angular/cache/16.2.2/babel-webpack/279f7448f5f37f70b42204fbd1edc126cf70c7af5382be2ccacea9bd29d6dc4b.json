{"ast":null,"code":"/*! @azure/msal-common v14.0.3 2023-09-05 */\n'use strict';\n\nimport _asyncToGenerator from \"C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ThrottlingUtils } from './ThrottlingUtils.mjs';\nimport { AuthError } from '../error/AuthError.mjs';\nimport { ClientAuthError } from '../error/ClientAuthError.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass NetworkManager {\n  constructor(networkClient, cacheManager) {\n    this.networkClient = networkClient;\n    this.cacheManager = cacheManager;\n  }\n  /**\n   * Wraps sendPostRequestAsync with necessary preflight and postflight logic\n   * @param thumbprint\n   * @param tokenEndpoint\n   * @param options\n   */\n  sendPostRequest(thumbprint, tokenEndpoint, options) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      ThrottlingUtils.preProcess(_this.cacheManager, thumbprint);\n      let response;\n      try {\n        response = yield _this.networkClient.sendPostRequestAsync(tokenEndpoint, options);\n      } catch (e) {\n        if (e instanceof AuthError) {\n          throw e;\n        } else {\n          throw ClientAuthError.createNetworkError(tokenEndpoint, e);\n        }\n      }\n      ThrottlingUtils.postProcess(_this.cacheManager, thumbprint, response);\n      return response;\n    })();\n  }\n}\nexport { NetworkManager };","map":{"version":3,"names":["_asyncToGenerator","ThrottlingUtils","AuthError","ClientAuthError","NetworkManager","constructor","networkClient","cacheManager","sendPostRequest","thumbprint","tokenEndpoint","options","_this","preProcess","response","sendPostRequestAsync","e","createNetworkError","postProcess"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-common/dist/network/NetworkManager.mjs"],"sourcesContent":["/*! @azure/msal-common v14.0.3 2023-09-05 */\n'use strict';\nimport { ThrottlingUtils } from './ThrottlingUtils.mjs';\nimport { AuthError } from '../error/AuthError.mjs';\nimport { ClientAuthError } from '../error/ClientAuthError.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass NetworkManager {\n    constructor(networkClient, cacheManager) {\n        this.networkClient = networkClient;\n        this.cacheManager = cacheManager;\n    }\n    /**\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\n     * @param thumbprint\n     * @param tokenEndpoint\n     * @param options\n     */\n    async sendPostRequest(thumbprint, tokenEndpoint, options) {\n        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n        let response;\n        try {\n            response = await this.networkClient.sendPostRequestAsync(tokenEndpoint, options);\n        }\n        catch (e) {\n            if (e instanceof AuthError) {\n                throw e;\n            }\n            else {\n                throw ClientAuthError.createNetworkError(tokenEndpoint, e);\n            }\n        }\n        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n        return response;\n    }\n}\n\nexport { NetworkManager };\n"],"mappings":"AAAA;AACA,YAAY;;AAAC,OAAAA,iBAAA;AACb,SAASC,eAAe,QAAQ,uBAAuB;AACvD,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,eAAe,QAAQ,8BAA8B;;AAE9D;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,CAAC;EACjBC,WAAWA,CAACC,aAAa,EAAEC,YAAY,EAAE;IACrC,IAAI,CAACD,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,YAAY,GAAGA,YAAY;EACpC;EACA;AACJ;AACA;AACA;AACA;AACA;EACUC,eAAeA,CAACC,UAAU,EAAEC,aAAa,EAAEC,OAAO,EAAE;IAAA,IAAAC,KAAA;IAAA,OAAAZ,iBAAA;MACtDC,eAAe,CAACY,UAAU,CAACD,KAAI,CAACL,YAAY,EAAEE,UAAU,CAAC;MACzD,IAAIK,QAAQ;MACZ,IAAI;QACAA,QAAQ,SAASF,KAAI,CAACN,aAAa,CAACS,oBAAoB,CAACL,aAAa,EAAEC,OAAO,CAAC;MACpF,CAAC,CACD,OAAOK,CAAC,EAAE;QACN,IAAIA,CAAC,YAAYd,SAAS,EAAE;UACxB,MAAMc,CAAC;QACX,CAAC,MACI;UACD,MAAMb,eAAe,CAACc,kBAAkB,CAACP,aAAa,EAAEM,CAAC,CAAC;QAC9D;MACJ;MACAf,eAAe,CAACiB,WAAW,CAACN,KAAI,CAACL,YAAY,EAAEE,UAAU,EAAEK,QAAQ,CAAC;MACpE,OAAOA,QAAQ;IAAC;EACpB;AACJ;AAEA,SAASV,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}