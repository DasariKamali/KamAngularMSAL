{"ast":null,"code":"/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass BrowserPerformanceMeasurement {\n  constructor(name, correlationId) {\n    this.correlationId = correlationId;\n    this.measureName = BrowserPerformanceMeasurement.makeMeasureName(name, correlationId);\n    this.startMark = BrowserPerformanceMeasurement.makeStartMark(name, correlationId);\n    this.endMark = BrowserPerformanceMeasurement.makeEndMark(name, correlationId);\n  }\n  static makeMeasureName(name, correlationId) {\n    return `msal.measure.${name}.${correlationId}`;\n  }\n  static makeStartMark(name, correlationId) {\n    return `msal.start.${name}.${correlationId}`;\n  }\n  static makeEndMark(name, correlationId) {\n    return `msal.end.${name}.${correlationId}`;\n  }\n  static supportsBrowserPerformance() {\n    return typeof window !== \"undefined\" && typeof window.performance !== \"undefined\" && typeof window.performance.mark === \"function\" && typeof window.performance.measure === \"function\" && typeof window.performance.clearMarks === \"function\" && typeof window.performance.clearMeasures === \"function\" && typeof window.performance.getEntriesByName === \"function\";\n  }\n  /**\n   * Flush browser marks and measurements.\n   * @param {string} correlationId\n   * @param {SubMeasurement} measurements\n   */\n  static flushMeasurements(correlationId, measurements) {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        measurements.forEach(measurement => {\n          const measureName = BrowserPerformanceMeasurement.makeMeasureName(measurement.name, correlationId);\n          const entriesForMeasurement = window.performance.getEntriesByName(measureName, \"measure\");\n          if (entriesForMeasurement.length > 0) {\n            window.performance.clearMeasures(measureName);\n            window.performance.clearMarks(BrowserPerformanceMeasurement.makeStartMark(measureName, correlationId));\n            window.performance.clearMarks(BrowserPerformanceMeasurement.makeEndMark(measureName, correlationId));\n          }\n        });\n      } catch (e) {\n        // Silently catch and return null\n      }\n    }\n  }\n  startMeasurement() {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        window.performance.mark(this.startMark);\n      } catch (e) {\n        // Silently catch\n      }\n    }\n  }\n  endMeasurement() {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        window.performance.mark(this.endMark);\n        window.performance.measure(this.measureName, this.startMark, this.endMark);\n      } catch (e) {\n        // Silently catch\n      }\n    }\n  }\n  flushMeasurement() {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        const entriesForMeasurement = window.performance.getEntriesByName(this.measureName, \"measure\");\n        if (entriesForMeasurement.length > 0) {\n          const durationMs = entriesForMeasurement[0].duration;\n          window.performance.clearMeasures(this.measureName);\n          window.performance.clearMarks(this.startMark);\n          window.performance.clearMarks(this.endMark);\n          return durationMs;\n        }\n      } catch (e) {\n        // Silently catch and return null\n      }\n    }\n    return null;\n  }\n}\nexport { BrowserPerformanceMeasurement };","map":{"version":3,"names":["BrowserPerformanceMeasurement","constructor","name","correlationId","measureName","makeMeasureName","startMark","makeStartMark","endMark","makeEndMark","supportsBrowserPerformance","window","performance","mark","measure","clearMarks","clearMeasures","getEntriesByName","flushMeasurements","measurements","forEach","measurement","entriesForMeasurement","length","e","startMeasurement","endMeasurement","flushMeasurement","durationMs","duration"],"sources":["C:/Users/v-dkamali/Documents/AngularMSALAD/microsoft-login/node_modules/@azure/msal-browser/dist/telemetry/BrowserPerformanceMeasurement.mjs"],"sourcesContent":["/*! @azure/msal-browser v3.1.0 2023-09-05 */\n'use strict';\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass BrowserPerformanceMeasurement {\n    constructor(name, correlationId) {\n        this.correlationId = correlationId;\n        this.measureName = BrowserPerformanceMeasurement.makeMeasureName(name, correlationId);\n        this.startMark = BrowserPerformanceMeasurement.makeStartMark(name, correlationId);\n        this.endMark = BrowserPerformanceMeasurement.makeEndMark(name, correlationId);\n    }\n    static makeMeasureName(name, correlationId) {\n        return `msal.measure.${name}.${correlationId}`;\n    }\n    static makeStartMark(name, correlationId) {\n        return `msal.start.${name}.${correlationId}`;\n    }\n    static makeEndMark(name, correlationId) {\n        return `msal.end.${name}.${correlationId}`;\n    }\n    static supportsBrowserPerformance() {\n        return (typeof window !== \"undefined\" &&\n            typeof window.performance !== \"undefined\" &&\n            typeof window.performance.mark === \"function\" &&\n            typeof window.performance.measure === \"function\" &&\n            typeof window.performance.clearMarks === \"function\" &&\n            typeof window.performance.clearMeasures === \"function\" &&\n            typeof window.performance.getEntriesByName === \"function\");\n    }\n    /**\n     * Flush browser marks and measurements.\n     * @param {string} correlationId\n     * @param {SubMeasurement} measurements\n     */\n    static flushMeasurements(correlationId, measurements) {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                measurements.forEach((measurement) => {\n                    const measureName = BrowserPerformanceMeasurement.makeMeasureName(measurement.name, correlationId);\n                    const entriesForMeasurement = window.performance.getEntriesByName(measureName, \"measure\");\n                    if (entriesForMeasurement.length > 0) {\n                        window.performance.clearMeasures(measureName);\n                        window.performance.clearMarks(BrowserPerformanceMeasurement.makeStartMark(measureName, correlationId));\n                        window.performance.clearMarks(BrowserPerformanceMeasurement.makeEndMark(measureName, correlationId));\n                    }\n                });\n            }\n            catch (e) {\n                // Silently catch and return null\n            }\n        }\n    }\n    startMeasurement() {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                window.performance.mark(this.startMark);\n            }\n            catch (e) {\n                // Silently catch\n            }\n        }\n    }\n    endMeasurement() {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                window.performance.mark(this.endMark);\n                window.performance.measure(this.measureName, this.startMark, this.endMark);\n            }\n            catch (e) {\n                // Silently catch\n            }\n        }\n    }\n    flushMeasurement() {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                const entriesForMeasurement = window.performance.getEntriesByName(this.measureName, \"measure\");\n                if (entriesForMeasurement.length > 0) {\n                    const durationMs = entriesForMeasurement[0].duration;\n                    window.performance.clearMeasures(this.measureName);\n                    window.performance.clearMarks(this.startMark);\n                    window.performance.clearMarks(this.endMark);\n                    return durationMs;\n                }\n            }\n            catch (e) {\n                // Silently catch and return null\n            }\n        }\n        return null;\n    }\n}\n\nexport { BrowserPerformanceMeasurement };\n"],"mappings":"AAAA;AACA,YAAY;;AACZ;AACA;AACA;AACA;AACA,MAAMA,6BAA6B,CAAC;EAChCC,WAAWA,CAACC,IAAI,EAAEC,aAAa,EAAE;IAC7B,IAAI,CAACA,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,WAAW,GAAGJ,6BAA6B,CAACK,eAAe,CAACH,IAAI,EAAEC,aAAa,CAAC;IACrF,IAAI,CAACG,SAAS,GAAGN,6BAA6B,CAACO,aAAa,CAACL,IAAI,EAAEC,aAAa,CAAC;IACjF,IAAI,CAACK,OAAO,GAAGR,6BAA6B,CAACS,WAAW,CAACP,IAAI,EAAEC,aAAa,CAAC;EACjF;EACA,OAAOE,eAAeA,CAACH,IAAI,EAAEC,aAAa,EAAE;IACxC,OAAQ,gBAAeD,IAAK,IAAGC,aAAc,EAAC;EAClD;EACA,OAAOI,aAAaA,CAACL,IAAI,EAAEC,aAAa,EAAE;IACtC,OAAQ,cAAaD,IAAK,IAAGC,aAAc,EAAC;EAChD;EACA,OAAOM,WAAWA,CAACP,IAAI,EAAEC,aAAa,EAAE;IACpC,OAAQ,YAAWD,IAAK,IAAGC,aAAc,EAAC;EAC9C;EACA,OAAOO,0BAA0BA,CAAA,EAAG;IAChC,OAAQ,OAAOC,MAAM,KAAK,WAAW,IACjC,OAAOA,MAAM,CAACC,WAAW,KAAK,WAAW,IACzC,OAAOD,MAAM,CAACC,WAAW,CAACC,IAAI,KAAK,UAAU,IAC7C,OAAOF,MAAM,CAACC,WAAW,CAACE,OAAO,KAAK,UAAU,IAChD,OAAOH,MAAM,CAACC,WAAW,CAACG,UAAU,KAAK,UAAU,IACnD,OAAOJ,MAAM,CAACC,WAAW,CAACI,aAAa,KAAK,UAAU,IACtD,OAAOL,MAAM,CAACC,WAAW,CAACK,gBAAgB,KAAK,UAAU;EACjE;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOC,iBAAiBA,CAACf,aAAa,EAAEgB,YAAY,EAAE;IAClD,IAAInB,6BAA6B,CAACU,0BAA0B,CAAC,CAAC,EAAE;MAC5D,IAAI;QACAS,YAAY,CAACC,OAAO,CAAEC,WAAW,IAAK;UAClC,MAAMjB,WAAW,GAAGJ,6BAA6B,CAACK,eAAe,CAACgB,WAAW,CAACnB,IAAI,EAAEC,aAAa,CAAC;UAClG,MAAMmB,qBAAqB,GAAGX,MAAM,CAACC,WAAW,CAACK,gBAAgB,CAACb,WAAW,EAAE,SAAS,CAAC;UACzF,IAAIkB,qBAAqB,CAACC,MAAM,GAAG,CAAC,EAAE;YAClCZ,MAAM,CAACC,WAAW,CAACI,aAAa,CAACZ,WAAW,CAAC;YAC7CO,MAAM,CAACC,WAAW,CAACG,UAAU,CAACf,6BAA6B,CAACO,aAAa,CAACH,WAAW,EAAED,aAAa,CAAC,CAAC;YACtGQ,MAAM,CAACC,WAAW,CAACG,UAAU,CAACf,6BAA6B,CAACS,WAAW,CAACL,WAAW,EAAED,aAAa,CAAC,CAAC;UACxG;QACJ,CAAC,CAAC;MACN,CAAC,CACD,OAAOqB,CAAC,EAAE;QACN;MAAA;IAER;EACJ;EACAC,gBAAgBA,CAAA,EAAG;IACf,IAAIzB,6BAA6B,CAACU,0BAA0B,CAAC,CAAC,EAAE;MAC5D,IAAI;QACAC,MAAM,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,CAACP,SAAS,CAAC;MAC3C,CAAC,CACD,OAAOkB,CAAC,EAAE;QACN;MAAA;IAER;EACJ;EACAE,cAAcA,CAAA,EAAG;IACb,IAAI1B,6BAA6B,CAACU,0BAA0B,CAAC,CAAC,EAAE;MAC5D,IAAI;QACAC,MAAM,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,CAACL,OAAO,CAAC;QACrCG,MAAM,CAACC,WAAW,CAACE,OAAO,CAAC,IAAI,CAACV,WAAW,EAAE,IAAI,CAACE,SAAS,EAAE,IAAI,CAACE,OAAO,CAAC;MAC9E,CAAC,CACD,OAAOgB,CAAC,EAAE;QACN;MAAA;IAER;EACJ;EACAG,gBAAgBA,CAAA,EAAG;IACf,IAAI3B,6BAA6B,CAACU,0BAA0B,CAAC,CAAC,EAAE;MAC5D,IAAI;QACA,MAAMY,qBAAqB,GAAGX,MAAM,CAACC,WAAW,CAACK,gBAAgB,CAAC,IAAI,CAACb,WAAW,EAAE,SAAS,CAAC;QAC9F,IAAIkB,qBAAqB,CAACC,MAAM,GAAG,CAAC,EAAE;UAClC,MAAMK,UAAU,GAAGN,qBAAqB,CAAC,CAAC,CAAC,CAACO,QAAQ;UACpDlB,MAAM,CAACC,WAAW,CAACI,aAAa,CAAC,IAAI,CAACZ,WAAW,CAAC;UAClDO,MAAM,CAACC,WAAW,CAACG,UAAU,CAAC,IAAI,CAACT,SAAS,CAAC;UAC7CK,MAAM,CAACC,WAAW,CAACG,UAAU,CAAC,IAAI,CAACP,OAAO,CAAC;UAC3C,OAAOoB,UAAU;QACrB;MACJ,CAAC,CACD,OAAOJ,CAAC,EAAE;QACN;MAAA;IAER;IACA,OAAO,IAAI;EACf;AACJ;AAEA,SAASxB,6BAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}